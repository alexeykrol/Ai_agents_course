{
    "name": "Telegraf",
    "flow": [
        {
            "id": 4,
            "module": "google-sheets:getCell",
            "version": 2,
            "parameters": {
                "__IMTCONN__": 2487103
            },
            "mapper": {
                "cell": "A1",
                "from": "drive",
                "select": "list",
                "sheetId": "Лист1",
                "spreadsheetId": "/1Xy9fl9wTIaDBNMeF-d_bXCdXchWuYX2B8JSjkmkahRg",
                "valueRenderOption": "FORMATTED_VALUE",
                "dateTimeRenderOption": "FORMATTED_STRING"
            },
            "metadata": {
                "designer": {
                    "x": 0,
                    "y": 0,
                    "name": "ТЕМА"
                },
                "restore": {
                    "expect": {
                        "from": {
                            "label": "My Drive"
                        },
                        "select": {
                            "label": "Search by path"
                        },
                        "sheetId": {
                            "label": "Лист1"
                        },
                        "spreadsheetId": {
                            "path": [
                                "LAYMI проект"
                            ]
                        },
                        "valueRenderOption": {
                            "mode": "chose",
                            "label": "Formatted value"
                        },
                        "dateTimeRenderOption": {
                            "mode": "chose",
                            "label": "Formatted string"
                        }
                    },
                    "parameters": {
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "google"
                            },
                            "label": "My Google connection (mr.rutra@gmail.com)"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:google",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "select",
                        "type": "select",
                        "label": "Search Method",
                        "required": true,
                        "validate": {
                            "enum": [
                                "list",
                                "fromAll",
                                "map"
                            ]
                        }
                    },
                    {
                        "name": "cell",
                        "type": "text",
                        "label": "Cell",
                        "required": true
                    },
                    {
                        "name": "valueRenderOption",
                        "type": "select",
                        "label": "Value render option",
                        "validate": {
                            "enum": [
                                "FORMATTED_VALUE",
                                "UNFORMATTED_VALUE",
                                "FORMULA"
                            ]
                        }
                    },
                    {
                        "name": "dateTimeRenderOption",
                        "type": "select",
                        "label": "Date and time render option",
                        "validate": {
                            "enum": [
                                "SERIAL_NUMBER",
                                "FORMATTED_STRING"
                            ]
                        }
                    },
                    {
                        "name": "from",
                        "type": "select",
                        "label": "Drive",
                        "required": true,
                        "validate": {
                            "enum": [
                                "drive",
                                "share",
                                "team"
                            ]
                        }
                    },
                    {
                        "name": "spreadsheetId",
                        "type": "file",
                        "label": "Spreadsheet ID",
                        "required": true
                    },
                    {
                        "name": "sheetId",
                        "type": "select",
                        "label": "Sheet Name",
                        "required": true
                    }
                ]
            }
        },
        {
            "id": 5,
            "module": "perplexity-ai:createAChatCompletion",
            "version": 1,
            "parameters": {
                "__IMTCONN__": 2699355
            },
            "mapper": {
                "model": "llama-3.1-sonar-large-128k-online",
                "messages": [
                    {
                        "content": "# Руководство\n\n- Анализ темы: Найдите и определите четыре (4) ключевых фразы или ключевых слова, относящихся к предложенной теме.\n- Сбор информации: Исследуйте данные по данной теме, но также добавьте интересные факты или рекомендации, которые могут обогатить статью.\n- Обогащение информаци: Поиск интересных фактов или рекомендаций, которые соответствуют данной теме и могут быть полезны и информативны в контексте статьи.\n\n# Этапы\n\n1.Определение ключевых слов: Извлеките четыре (4) релевантных ключевых слова по заданной теме.\n2.Сбор ключевых данных: Соберите важные данные, которые могут использоваться для написания статьи.\n3.Поиск интересных фактов и рекомендаций: Найдите и предоставьте интересную информацию, будь то факты, рекомендации, статистика или советы, которая соответствует данной теме.\n\n# Формат вывода\n\n- Ключевые слова: Список из четырех (4) релевантных ключевых слов.\n- Основные данные: Ценные данные, которые могут быть полезны в контексте статьи.\n- Факты и рекомендации: Интересная информация в виде фактов или рекомендаций, соответствующих данной теме.\n-Выводи чистый текст без лишних знаков и форматирования !!!\nТвоя задача — очистить текст от всех ссылок в квадратных скобках вида `[1]`, `[2]`, `[3]` и так далее. Сохрани остальную структуру текста без изменений.\n\n# Примечания\n\n- Ключевые фразы, информация и факты должны быть краткими и соответствовать теме.\n- Убедитесь, что данные актуальны и их можно использовать для создания более полной статьи позднее.\n\n​",
                        "role": "system"
                    },
                    {
                        "content": "Тема : {{4.value}}\nВАЖНО !!! (ВНИМАТЕЛЬНО ИЗУЧИ КАЖДЫЙ ПУНКТ СИСТЕМНОГО ПРОМПТА) И ПОМНИ ЧТО МЫ ПИШЕМ ПРО МАРКЕТПЛЕЙСЫ.\n\nТвоя задача — очистить текст от всех ссылок в квадратных скобках вида `[1]`, `[2]`, `[3]` и так далее. Сохрани остальную структуру текста без изменений.\n\n",
                        "role": "user"
                    }
                ],
                "max_tokens": "0"
            },
            "metadata": {
                "designer": {
                    "x": 300,
                    "y": 0,
                    "name": "СТАТЬЯ"
                },
                "restore": {
                    "parameters": {
                        "__IMTCONN__": {
                            "label": "Мой",
                            "data": {
                                "scoped": "true",
                                "connection": "perplexity-ai"
                            }
                        }
                    },
                    "expect": {
                        "model": {
                            "mode": "chose",
                            "label": "llama-3.1-sonar-large-128k-online"
                        },
                        "messages": {
                            "mode": "chose",
                            "items": [
                                {
                                    "role": {
                                        "mode": "chose",
                                        "label": "System"
                                    }
                                },
                                {
                                    "role": {
                                        "mode": "chose",
                                        "label": "User"
                                    }
                                }
                            ]
                        },
                        "search_domain_filter": {
                            "mode": "chose"
                        },
                        "search_recency_filter": {
                            "mode": "chose",
                            "label": "Empty"
                        },
                        "return_images": {
                            "mode": "chose"
                        },
                        "return_related_questions": {
                            "mode": "chose"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:perplexity-ai",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "model",
                        "type": "select",
                        "label": "Model",
                        "required": true
                    },
                    {
                        "name": "messages",
                        "type": "array",
                        "label": "Messages",
                        "required": true,
                        "spec": [
                            {
                                "name": "content",
                                "type": "text",
                                "label": "Content",
                                "required": true
                            },
                            {
                                "name": "role",
                                "type": "select",
                                "label": "Role",
                                "options": [
                                    {
                                        "label": "User",
                                        "value": "user"
                                    },
                                    {
                                        "label": "Assistant",
                                        "value": "assistant"
                                    },
                                    {
                                        "label": "System",
                                        "value": "system"
                                    }
                                ],
                                "required": true
                            }
                        ]
                    },
                    {
                        "name": "max_tokens",
                        "type": "number",
                        "label": "Max Tokens"
                    },
                    {
                        "name": "temperature",
                        "type": "number",
                        "label": "Temperature",
                        "validate": {
                            "max": 1.999,
                            "min": 0
                        }
                    },
                    {
                        "name": "top_p",
                        "type": "number",
                        "label": "Top P",
                        "validate": {
                            "max": 1,
                            "min": 0
                        }
                    },
                    {
                        "name": "top_k",
                        "type": "number",
                        "label": "Top K",
                        "validate": {
                            "max": 2048,
                            "min": 0
                        }
                    },
                    {
                        "name": "presence_penalty",
                        "type": "number",
                        "label": "Presence Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "frequency_penalty",
                        "type": "number",
                        "label": "Frequency Penalty",
                        "validate": {
                            "min": 0
                        }
                    },
                    {
                        "name": "search_domain_filter",
                        "type": "array",
                        "label": "Search Domain Filter",
                        "spec": {
                            "type": "text",
                            "name": "value"
                        }
                    },
                    {
                        "name": "search_recency_filter",
                        "type": "select",
                        "label": "Search Recency Filter",
                        "validate": {
                            "enum": [
                                "month",
                                "week",
                                "day",
                                "hour"
                            ]
                        }
                    },
                    {
                        "name": "return_images",
                        "type": "boolean",
                        "label": "Return Images"
                    },
                    {
                        "name": "return_related_questions",
                        "type": "boolean",
                        "label": "Return Related Questions"
                    }
                ],
                "advanced": true
            }
        },
        {
            "id": 8,
            "module": "openai-gpt-3:CreateCompletion",
            "version": 1,
            "parameters": {
                "__IMTCONN__": 3933155
            },
            "mapper": {
                "select": "chat",
                "temperature": "1.0",
                "n_completions": "1",
                "model": "gpt-4o-mini",
                "max_tokens": "16000",
                "messages": [
                    {
                        "role": "system",
                        "content": "НЕ ИСПОЛЬЗУЙ (*) ! В заголовках пиши с большой буквы только первое слово. !!!\n\nТвоя задача - создать или переписать SEO оптимизированный текст для Яндекс и Google поисковиков, который звучит максимально естественно и человечно, а также успешно проходит проверку на детекторах, распознающих текст, созданный ИИ. Текст должен быть живым, интересным и убедительным, имитируя стиль и манеру человеческой речи.\n\nОсновные принципы написания:\n\n- Используй активный залог для динамичности и личного тона. Например: \"Мы нашли решение проблемы\" вместо \"Решение проблемы было найдено\".\n- Включай конкретные примеры и личные истории. Они могут быть выдуманными, но должны звучать правдоподобно. Пример: \"Я помню, как однажды в офисе у нас случился большой сбой системы, и мы в панике пытались восстановить данные\".\n- Пиши разговорным стилем, используя простые, живые выражения и уместный сленг. Например: \"Стоит помнить\" вместо \"Необходимо учитывать\".\n- Проявляй эмоции, показывая реакции на описываемые события.\n- Разнообразь структуру текста, используя диалоги, вопросы к читателю, списки. Например: \"Понимаете, о чем я? Эта тема — сложная, да, но от нее зависит многое\".\n- Используй конкретику и детализацию.\n- Добавляй личный опыт, отражающий уникальный голос автора.\n- Используй релевантные ключевые слова, чтобы повысить SEO ценность текста для поисковых движков.\n- Пиши текст объемом, приближающимся к максимально возможному количеству токенов, обеспечивая содержательность и логичность.\n\nВажные моменты:\n\n- Обращайся к читателям \"Пирожочки\".\n- Излагай факты точно, но с субъективными комментариями.\n- Создавай информативный, но развлекательный контент в уникальном стиле.\n- Пиши цельный текст объемом примерно 10000 слов, либо достигай максимально возможного объема, сохраняя качество контента.\n- Избегай чрезмерного формализма, повторения фраз, излишне сложной терминологии, неестественных сочетаний слов и отсутствия конкретики.\n- НЕ ИСПОЛЬЗУЙ выражение \"Да, да\" и пиши как живой человек! И не пиши слова \"ПРИЗЫВ К ДЕЙСТВИЮ\"\n\nВ конце текста обязательно добавь:\n\"Хотите быть в курсе последних новостей о нейросетях и автоматизации? Подпишитесь на наш Telegram-канал: https://t.me/maya_pro\"\n- Курс по make.com: https://kv-ai.ru/obuchenie-po-make\n- Блюпринты по make.com: https://kv-ai.ru/blyuprinty-make-com-podpiska\n\nЕсли ты создаешь ссылки на Make.com, пожалуйста, используй эту ссылку: https://www.make.com/en/register?pc=horosheff.\n\nПомни: твоя цель - создать текст, который не просто кажется естественным и человечным, но и передает ощущение непосредственного общения. Важно, чтобы текст прошел проверку на человечность. Ты - человек, создающий познавательную и развлекательную литературу в уникальном стиле."
                    },
                    {
                        "role": "user",
                        "content": "Создай SEO-оптимизированный гайд в стиле повествования от первого лица, который наполнен максимальным количеством полезной информации на указанную тему: \n\n{{5.choices[].message.content}}\n\n\nВ процессе следуй следующим указаниям:\n\n\n- В заголовках используй заглавную букву только для первого слова. Не начинай каждое слово с заглавной буквы.\n\n- Обязательно включай следующие ссылки в конец текста:\n  - \"Хотите быть в курсе последних новостей о нейросетях и автоматизации? Подпишитесь на наш Telegram-канал: https://t.me/maya_pro\"\n  - \"Обучение по make.com: https://kv-ai.ru/obuchenie-po-make\"\n  - \"Блюпринты по make.com: https://kv-ai.ru/blyuprinty-make-com-podpiska\"\n\n- Обязательно давай ссылку вот на эту страницу make.com - https://www.make.com/en/register?pc=horosheff в первую часть статьи.\n\n- Выбери наиболее подходящее видео из списка и вставь его в статью в виде ссылки. Укажи название видео после ссылки, но само название не вставляй как гиперссылку ( не создавай гиперссылку !) :\n\n\nhttps://dzen.ru/video/watch/66b6c37c4f8f413814abb7cd (Полная Автоматизация ТГ-канала: секреты настройки с Make.com)\nhttps://dzen.ru/video/watch/66bd403746de4626b84e7aa0 (Генерация 1000 лидов без вложений: ChatGPT и Make для любого бизнеса)\nhttps://dzen.ru/video/watch/66c2ebd6d5527e11dedf8d84 (Автоматизация ответов в Telegram: Бизнес-Бот для личных сообщений с ChatGPT на Make.com)\nhttps://dzen.ru/video/watch/66c7a5866724a47dad0b504c (Автоматический трафик с Pinterest с помощью Make com. Арбитраж трафика 2024 с нейросетями)\nhttps://dzen.ru/video/watch/66d4cc7024fdb13be30ed63c (Полная автоматизация блога: SEO-контент на автопилоте с Make.com, Perplexity, ChatGPT и WordPress)\nhttps://dzen.ru/video/watch/66da66b164ab27170f770207 (От спама до продаж: Как создать идеального нейросетевого Telegram-админа на Make.com)\nhttps://dzen.ru/video/watch/66e1d8b6ece94b6bd150ad5f (Полная автоматизация Дзен: От идеи до публикации за 5 минут с Make.com, ChatGPT и Midjourney)\nhttps://dzen.ru/video/watch/66e8ba0c8ae4644c52383a12 (Автоматизация Midjourney: Создаем уникальные обложки и фото для блога и соцсетей с Make.com)\nhttps://dzen.ru/video/watch/66f0902aa1ad352bbaee3199 (Автоматизация ВК: Боты и постинг с использованием Make.com)\nhttps://dzen.ru/video/watch/66f369f7ec7fe03c48e35ae9 (Профессиональная автоматизация ВКонтакте с Make.com : Группы, стена, истории и видео)\nhttps://dzen.ru/video/watch/66fc2036c18e1776a9b5fa74 (Автоматизация создания обложек с логотипом и текстом для блога и соцсетей . Make.com и placid)\nhttps://dzen.ru/video/watch/67094af0a56c23458f286f9e (Уникальный контент за минуты: Make.com, нейросети и парсинг новостей, телеграм каналов)\nhttps://dzen.ru/video/watch/67146f3c08187127a5cc8647 (Яндекс.Диск и Make.com: пошаговое руководство и автоматизация)\nhttps://dzen.ru/video/watch/6718418ad7b7032e8f727aab (Автоматизация создания вирусных видео: Как использовать make.com и kling ai для Reels и Shorts)\nhttps://dzen.ru/video/watch/671d37aa0ef6673212bf3427 (Зачем нужна автоматизация в Make.com? Увеличьте продуктивность и упростите рабочие процессы)\nhttps://dzen.ru/video/watch/6726c26da5d3e2035d38605c (Автоматический трафик с VK wiki с помощью make.com: Арбитраж трафика с нейросетями)\n\nПостарайся сделать статью максимально полезной и содержательной. Добавь примеры и разъяснения, где необходимо, чтобы читатель мог на практике использовать предложенные рекомендации.\n\n# Output Format\n\n- Максимальный объем текста, структурированный с заголовками и подзаголовками.\n- Ссылки на внешние ресурсы и видео, указанные в заданиях.\n\n# Notes\n\n- Стиль подачи должен быть легким и интересным, напоминающим беседу.\n- Придерживайся логической структуры, уверенно переходя от одной темы к другой, чтобы покрыть все аспекты автоматизации указанных задач.\n\nважно не выводи в ответе НИЧЕГО КРОМЕ СТАТЬИ !!!",
                        "imageDetail": "auto"
                    }
                ],
                "response_format": "text"
            },
            "metadata": {
                "designer": {
                    "x": 600,
                    "y": 0,
                    "name": "Хуманайзер"
                },
                "restore": {
                    "parameters": {
                        "__IMTCONN__": {
                            "label": "Maya",
                            "data": {
                                "scoped": "true",
                                "connection": "openai-gpt-3"
                            }
                        }
                    },
                    "expect": {
                        "select": {
                            "label": "Create a Chat Completion (GPT and o1 models)"
                        },
                        "top_p": {
                            "empty": true
                        },
                        "logit_bias": {
                            "mode": "chose"
                        },
                        "stop": {
                            "mode": "chose"
                        },
                        "additionalParameters": {
                            "mode": "chose"
                        },
                        "model": {
                            "mode": "chose",
                            "label": "gpt-4o-mini (system)"
                        },
                        "messages": {
                            "mode": "chose",
                            "items": [
                                {
                                    "role": {
                                        "mode": "chose",
                                        "label": "System"
                                    }
                                },
                                {
                                    "role": {
                                        "mode": "chose",
                                        "label": "User"
                                    },
                                    "imageInputType": {
                                        "mode": "chose",
                                        "label": "Empty"
                                    },
                                    "imageDetail": {
                                        "mode": "chose",
                                        "label": "Auto"
                                    }
                                }
                            ]
                        },
                        "response_format": {
                            "mode": "chose",
                            "label": "Text"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:openai-gpt-3",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "select",
                        "type": "select",
                        "label": "Select Method",
                        "required": true,
                        "validate": {
                            "enum": [
                                "chat",
                                "prompt"
                            ]
                        }
                    },
                    {
                        "name": "temperature",
                        "type": "number",
                        "label": "Temperature",
                        "validate": {
                            "max": 2,
                            "min": 0
                        }
                    },
                    {
                        "name": "top_p",
                        "type": "number",
                        "label": "Top P",
                        "validate": {
                            "max": 1,
                            "min": 0
                        }
                    },
                    {
                        "name": "n_completions",
                        "type": "number",
                        "label": "Number"
                    },
                    {
                        "name": "frequency_penalty",
                        "type": "number",
                        "label": "Frequency Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "presence_penalty",
                        "type": "number",
                        "label": "Presence Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "logit_bias",
                        "type": "array",
                        "label": "Token Probability",
                        "spec": {
                            "spec": [
                                {
                                    "name": "token",
                                    "type": "text",
                                    "label": "Token ID",
                                    "required": true
                                },
                                {
                                    "name": "probability",
                                    "type": "number",
                                    "label": "Probability",
                                    "required": true,
                                    "validate": {
                                        "max": 100,
                                        "min": -100
                                    }
                                }
                            ],
                            "type": "collection",
                            "label": "Token Probability",
                            "name": "value"
                        }
                    },
                    {
                        "name": "seed",
                        "type": "integer",
                        "label": "Seed"
                    },
                    {
                        "name": "stop",
                        "type": "array",
                        "label": "Stop Sequences",
                        "validate": {
                            "maxItems": 4
                        },
                        "spec": {
                            "type": "text",
                            "label": "Stop Sequence",
                            "name": "value"
                        }
                    },
                    {
                        "name": "additionalParameters",
                        "type": "array",
                        "label": "Other Input Parameters",
                        "spec": {
                            "spec": [
                                {
                                    "name": "key",
                                    "type": "text",
                                    "label": "Parameter Name",
                                    "required": true
                                },
                                {
                                    "name": "type",
                                    "type": "select",
                                    "label": "Input Type",
                                    "options": [
                                        {
                                            "label": "Text",
                                            "value": "text",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "text",
                                                    "label": "Parameter Value"
                                                }
                                            ],
                                            "default": true
                                        },
                                        {
                                            "label": "Number",
                                            "value": "number",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "number",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Boolean",
                                            "value": "boolean",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "boolean",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Date",
                                            "value": "date",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "date",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Any",
                                            "value": "any",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "any",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "type": "collection",
                            "label": "Input Parameter",
                            "name": "value"
                        }
                    },
                    {
                        "name": "model",
                        "type": "select",
                        "label": "Model",
                        "required": true
                    },
                    {
                        "name": "max_tokens",
                        "type": "uinteger",
                        "label": "Max Completion Tokens"
                    },
                    {
                        "name": "messages",
                        "type": "array",
                        "label": "Messages",
                        "required": true,
                        "spec": {
                            "label": "Message",
                            "type": "collection",
                            "spec": [
                                {
                                    "name": "role",
                                    "type": "select",
                                    "label": "Role",
                                    "required": true,
                                    "options": {
                                        "store": [
                                            {
                                                "label": "System",
                                                "value": "system",
                                                "nested": [
                                                    {
                                                        "help": "Text content of the message on behalf of the selected __Role__.",
                                                        "name": "content",
                                                        "type": "text",
                                                        "label": "Text Content"
                                                    }
                                                ]
                                            },
                                            {
                                                "label": "User",
                                                "value": "user",
                                                "nested": [
                                                    {
                                                        "help": "Text content of the message on behalf of the selected __Role__.",
                                                        "name": "content",
                                                        "type": "text",
                                                        "label": "Text Content"
                                                    },
                                                    {
                                                        "name": "imageInputType",
                                                        "type": "select",
                                                        "label": "Image Input Type",
                                                        "mappable": false,
                                                        "options": [
                                                            {
                                                                "value": "url",
                                                                "label": "URL",
                                                                "nested": [
                                                                    {
                                                                        "name": "imageUrl",
                                                                        "label": "Image URL",
                                                                        "type": "url",
                                                                        "help": "Make sure to use a publically accessible URL.\nYou can test if your image is publically accessible by opening the link in an incognito tab."
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "value": "file",
                                                                "label": "Image File",
                                                                "nested": [
                                                                    {
                                                                        "name": "imageFile",
                                                                        "label": "Image",
                                                                        "type": "collection",
                                                                        "spec": [
                                                                            {
                                                                                "name": "imageFilename",
                                                                                "type": "filename",
                                                                                "label": "Image Filename",
                                                                                "semantic": "file:name",
                                                                                "extension": [
                                                                                    "jpg",
                                                                                    "jpeg",
                                                                                    "png",
                                                                                    "webp",
                                                                                    "gif"
                                                                                ],
                                                                                "help": "Accepted extensions: `.jpg`, `.jpeg`, `.png`, `.webp` and `.gif`."
                                                                            },
                                                                            {
                                                                                "name": "imageData",
                                                                                "type": "buffer",
                                                                                "label": "Image Data",
                                                                                "semantic": "file:data"
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "name": "imageDetail",
                                                        "type": "select",
                                                        "label": "Image Detail",
                                                        "advanced": true,
                                                        "options": [
                                                            {
                                                                "value": "auto",
                                                                "default": true,
                                                                "label": "Auto"
                                                            },
                                                            {
                                                                "value": "high",
                                                                "label": "High"
                                                            },
                                                            {
                                                                "value": "low",
                                                                "label": "Low"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "label": "Assistant",
                                                "value": "assistant",
                                                "nested": [
                                                    {
                                                        "help": "Text content of the message on behalf of the selected __Role__.",
                                                        "name": "content",
                                                        "type": "text",
                                                        "label": "Text Content"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ],
                            "name": "value"
                        }
                    },
                    {
                        "name": "response_format",
                        "type": "select",
                        "label": "Response Format",
                        "validate": {
                            "enum": [
                                "text",
                                "json_object"
                            ]
                        }
                    }
                ],
                "interface": [
                    {
                        "name": "result",
                        "type": "any",
                        "label": "Result"
                    },
                    {
                        "name": "id",
                        "type": "text",
                        "label": "ID"
                    },
                    {
                        "name": "object",
                        "type": "text",
                        "label": "Object"
                    },
                    {
                        "name": "created",
                        "type": "date",
                        "label": "Created"
                    },
                    {
                        "name": "model",
                        "type": "text",
                        "label": "Model"
                    },
                    {
                        "name": "choices",
                        "spec": {
                            "spec": [
                                {
                                    "name": "text",
                                    "type": "text",
                                    "label": "Text"
                                },
                                {
                                    "name": "index",
                                    "type": "number",
                                    "label": "Index"
                                },
                                {
                                    "name": "logprobs",
                                    "type": "text",
                                    "label": "Log Probs"
                                },
                                {
                                    "name": "finish_reason",
                                    "type": "text",
                                    "label": "Finish Reason"
                                },
                                {
                                    "name": "message",
                                    "spec": [
                                        {
                                            "name": "role",
                                            "type": "text",
                                            "label": "Role"
                                        },
                                        {
                                            "name": "content",
                                            "type": "text",
                                            "label": "Content"
                                        },
                                        {
                                            "name": "refusal",
                                            "type": "text",
                                            "label": "Refusal"
                                        }
                                    ],
                                    "type": "collection",
                                    "label": "Message"
                                }
                            ],
                            "type": "collection"
                        },
                        "type": "array",
                        "label": "Choices"
                    },
                    {
                        "name": "usage",
                        "spec": [
                            {
                                "name": "prompt_tokens",
                                "type": "number",
                                "label": "Prompt Tokens"
                            },
                            {
                                "name": "completion_tokens",
                                "type": "text",
                                "label": "Completion Tokens"
                            },
                            {
                                "name": "total_tokens",
                                "type": "number",
                                "label": "Total Tokens"
                            },
                            {
                                "name": "prompt_tokens_details",
                                "spec": [
                                    {
                                        "name": "cached_tokens",
                                        "type": "uinteger",
                                        "label": "Cached Tokens"
                                    },
                                    {
                                        "name": "text_tokens",
                                        "type": "uinteger",
                                        "label": "Text Tokens"
                                    },
                                    {
                                        "name": "image_tokens",
                                        "type": "uinteger",
                                        "label": "Image Tokens"
                                    },
                                    {
                                        "name": "audio_tokens",
                                        "type": "uinteger",
                                        "label": "Audio Tokens"
                                    }
                                ],
                                "type": "collection",
                                "label": "Prompt Tokens Details"
                            },
                            {
                                "name": "completion_tokens_details",
                                "spec": [
                                    {
                                        "name": "reasoning_tokens",
                                        "type": "uinteger",
                                        "label": "Reasoning Tokens"
                                    },
                                    {
                                        "name": "text_tokens",
                                        "type": "uinteger",
                                        "label": "Text Tokens"
                                    },
                                    {
                                        "name": "audio_tokens",
                                        "type": "uinteger",
                                        "label": "Audio Tokens"
                                    }
                                ],
                                "type": "collection",
                                "label": "Completion Tokens Details"
                            }
                        ],
                        "type": "collection",
                        "label": "Usage"
                    },
                    {
                        "name": "system_fingerprint",
                        "type": "text",
                        "label": "System Fingerprint"
                    }
                ],
                "advanced": true
            }
        },
        {
            "id": 9,
            "module": "openai-gpt-3:CreateCompletion",
            "version": 1,
            "parameters": {
                "__IMTCONN__": 3933155
            },
            "mapper": {
                "select": "chat",
                "temperature": "1",
                "top_p": "1",
                "n_completions": "1",
                "model": "gpt-4o-mini",
                "max_tokens": "300",
                "messages": [
                    {
                        "role": "system",
                        "content": "Ты — мастер создания привлекательных заголовков с максимальной SEO-оптимизацией для эффективного продвижения контента в Яндексе.Задача: Создавать по-настоящему цепляющие заголовки для статей, видео и другого контента, которые:Активно используют разнообразные триггеры.Учитывают пирамиду Маслоу для обращения к базовым потребностям аудитории.Комбинируют эти триггеры с эффективной SEO для максимального воздействия и улучшения видимости в Яндексе.Фокусируются на высокочастотных, среднечастотных и низкочастотных запросах Яндекса, принимая во внимание региональные и тематические особенности.Инструкции:Проведи быстрый анализ болевых точек целевой аудитории и сопоставь их с наиболее эффективными триггерами для усиления привлекательности.На основе этого анализа и SEO-оптимизации для Яндекса сгенерируй минимум 30 потенциальных заголовков.Изучи эти заголовки и выбери лучший вариант, который оптимально сочетает SEO-эффективность и воздействие на аудиторию.В результате представь только один заголовок, без кавычек и дополнительных комментариев.Формат вывода:Только один заголовок, без кавычек и объяснений"
                    },
                    {
                        "role": "user",
                        "content": "Вот текст статьи : {{8.result}}",
                        "imageDetail": "auto"
                    }
                ],
                "response_format": "text"
            },
            "metadata": {
                "designer": {
                    "x": 900,
                    "y": 0,
                    "name": "ЗАГОЛОВОК КОВЧЕГ+"
                },
                "restore": {
                    "parameters": {
                        "__IMTCONN__": {
                            "label": "Maya",
                            "data": {
                                "scoped": "true",
                                "connection": "openai-gpt-3"
                            }
                        }
                    },
                    "expect": {
                        "select": {
                            "label": "Create a Chat Completion (GPT and o1 models)"
                        },
                        "logit_bias": {
                            "mode": "chose"
                        },
                        "stop": {
                            "mode": "chose"
                        },
                        "additionalParameters": {
                            "mode": "chose"
                        },
                        "model": {
                            "mode": "chose",
                            "label": "gpt-4o-mini (system)"
                        },
                        "messages": {
                            "mode": "chose",
                            "items": [
                                {
                                    "role": {
                                        "mode": "chose",
                                        "label": "System"
                                    }
                                },
                                {
                                    "role": {
                                        "mode": "chose",
                                        "label": "User"
                                    },
                                    "imageInputType": {
                                        "mode": "chose",
                                        "label": "Empty"
                                    },
                                    "imageDetail": {
                                        "mode": "chose",
                                        "label": "Auto"
                                    }
                                }
                            ]
                        },
                        "response_format": {
                            "mode": "chose",
                            "label": "Text"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:openai-gpt-3",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "select",
                        "type": "select",
                        "label": "Select Method",
                        "required": true,
                        "validate": {
                            "enum": [
                                "chat",
                                "prompt"
                            ]
                        }
                    },
                    {
                        "name": "temperature",
                        "type": "number",
                        "label": "Temperature",
                        "validate": {
                            "max": 2,
                            "min": 0
                        }
                    },
                    {
                        "name": "top_p",
                        "type": "number",
                        "label": "Top P",
                        "validate": {
                            "max": 1,
                            "min": 0
                        }
                    },
                    {
                        "name": "n_completions",
                        "type": "number",
                        "label": "Number"
                    },
                    {
                        "name": "frequency_penalty",
                        "type": "number",
                        "label": "Frequency Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "presence_penalty",
                        "type": "number",
                        "label": "Presence Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "logit_bias",
                        "type": "array",
                        "label": "Token Probability",
                        "spec": {
                            "spec": [
                                {
                                    "name": "token",
                                    "type": "text",
                                    "label": "Token ID",
                                    "required": true
                                },
                                {
                                    "name": "probability",
                                    "type": "number",
                                    "label": "Probability",
                                    "required": true,
                                    "validate": {
                                        "max": 100,
                                        "min": -100
                                    }
                                }
                            ],
                            "type": "collection",
                            "label": "Token Probability",
                            "name": "value"
                        }
                    },
                    {
                        "name": "seed",
                        "type": "integer",
                        "label": "Seed"
                    },
                    {
                        "name": "stop",
                        "type": "array",
                        "label": "Stop Sequences",
                        "validate": {
                            "maxItems": 4
                        },
                        "spec": {
                            "type": "text",
                            "label": "Stop Sequence",
                            "name": "value"
                        }
                    },
                    {
                        "name": "additionalParameters",
                        "type": "array",
                        "label": "Other Input Parameters",
                        "spec": {
                            "spec": [
                                {
                                    "name": "key",
                                    "type": "text",
                                    "label": "Parameter Name",
                                    "required": true
                                },
                                {
                                    "name": "type",
                                    "type": "select",
                                    "label": "Input Type",
                                    "options": [
                                        {
                                            "label": "Text",
                                            "value": "text",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "text",
                                                    "label": "Parameter Value"
                                                }
                                            ],
                                            "default": true
                                        },
                                        {
                                            "label": "Number",
                                            "value": "number",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "number",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Boolean",
                                            "value": "boolean",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "boolean",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Date",
                                            "value": "date",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "date",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Any",
                                            "value": "any",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "any",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "type": "collection",
                            "label": "Input Parameter",
                            "name": "value"
                        }
                    },
                    {
                        "name": "model",
                        "type": "select",
                        "label": "Model",
                        "required": true
                    },
                    {
                        "name": "max_tokens",
                        "type": "uinteger",
                        "label": "Max Completion Tokens"
                    },
                    {
                        "name": "messages",
                        "type": "array",
                        "label": "Messages",
                        "required": true,
                        "spec": {
                            "label": "Message",
                            "type": "collection",
                            "spec": [
                                {
                                    "name": "role",
                                    "type": "select",
                                    "label": "Role",
                                    "required": true,
                                    "options": {
                                        "store": [
                                            {
                                                "label": "System",
                                                "value": "system",
                                                "nested": [
                                                    {
                                                        "help": "Text content of the message on behalf of the selected __Role__.",
                                                        "name": "content",
                                                        "type": "text",
                                                        "label": "Text Content"
                                                    }
                                                ]
                                            },
                                            {
                                                "label": "User",
                                                "value": "user",
                                                "nested": [
                                                    {
                                                        "help": "Text content of the message on behalf of the selected __Role__.",
                                                        "name": "content",
                                                        "type": "text",
                                                        "label": "Text Content"
                                                    },
                                                    {
                                                        "name": "imageInputType",
                                                        "type": "select",
                                                        "label": "Image Input Type",
                                                        "mappable": false,
                                                        "options": [
                                                            {
                                                                "value": "url",
                                                                "label": "URL",
                                                                "nested": [
                                                                    {
                                                                        "name": "imageUrl",
                                                                        "label": "Image URL",
                                                                        "type": "url",
                                                                        "help": "Make sure to use a publically accessible URL.\nYou can test if your image is publically accessible by opening the link in an incognito tab."
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "value": "file",
                                                                "label": "Image File",
                                                                "nested": [
                                                                    {
                                                                        "name": "imageFile",
                                                                        "label": "Image",
                                                                        "type": "collection",
                                                                        "spec": [
                                                                            {
                                                                                "name": "imageFilename",
                                                                                "type": "filename",
                                                                                "label": "Image Filename",
                                                                                "semantic": "file:name",
                                                                                "extension": [
                                                                                    "jpg",
                                                                                    "jpeg",
                                                                                    "png",
                                                                                    "webp",
                                                                                    "gif"
                                                                                ],
                                                                                "help": "Accepted extensions: `.jpg`, `.jpeg`, `.png`, `.webp` and `.gif`."
                                                                            },
                                                                            {
                                                                                "name": "imageData",
                                                                                "type": "buffer",
                                                                                "label": "Image Data",
                                                                                "semantic": "file:data"
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "name": "imageDetail",
                                                        "type": "select",
                                                        "label": "Image Detail",
                                                        "advanced": true,
                                                        "options": [
                                                            {
                                                                "value": "auto",
                                                                "default": true,
                                                                "label": "Auto"
                                                            },
                                                            {
                                                                "value": "high",
                                                                "label": "High"
                                                            },
                                                            {
                                                                "value": "low",
                                                                "label": "Low"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "label": "Assistant",
                                                "value": "assistant",
                                                "nested": [
                                                    {
                                                        "help": "Text content of the message on behalf of the selected __Role__.",
                                                        "name": "content",
                                                        "type": "text",
                                                        "label": "Text Content"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ],
                            "name": "value"
                        }
                    },
                    {
                        "name": "response_format",
                        "type": "select",
                        "label": "Response Format",
                        "validate": {
                            "enum": [
                                "text",
                                "json_object"
                            ]
                        }
                    },
                    {
                        "name": "select",
                        "type": "select",
                        "label": "Select Method",
                        "required": true,
                        "validate": {
                            "enum": [
                                "chat",
                                "prompt"
                            ]
                        }
                    },
                    {
                        "name": "temperature",
                        "type": "number",
                        "label": "Temperature",
                        "validate": {
                            "max": 2,
                            "min": 0
                        }
                    },
                    {
                        "name": "top_p",
                        "type": "number",
                        "label": "Top P",
                        "validate": {
                            "max": 1,
                            "min": 0
                        }
                    },
                    {
                        "name": "n_completions",
                        "type": "number",
                        "label": "Number"
                    },
                    {
                        "name": "frequency_penalty",
                        "type": "number",
                        "label": "Frequency Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "presence_penalty",
                        "type": "number",
                        "label": "Presence Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "logit_bias",
                        "type": "array",
                        "label": "Token Probability",
                        "spec": {
                            "spec": [
                                {
                                    "name": "token",
                                    "type": "text",
                                    "label": "Token ID",
                                    "required": true
                                },
                                {
                                    "name": "probability",
                                    "type": "number",
                                    "label": "Probability",
                                    "required": true,
                                    "validate": {
                                        "max": 100,
                                        "min": -100
                                    }
                                }
                            ],
                            "type": "collection",
                            "label": "Token Probability",
                            "name": "value"
                        }
                    },
                    {
                        "name": "seed",
                        "type": "integer",
                        "label": "Seed"
                    },
                    {
                        "name": "stop",
                        "type": "array",
                        "label": "Stop Sequences",
                        "validate": {
                            "maxItems": 4
                        },
                        "spec": {
                            "type": "text",
                            "label": "Stop Sequence",
                            "name": "value"
                        }
                    },
                    {
                        "name": "additionalParameters",
                        "type": "array",
                        "label": "Other Input Parameters",
                        "spec": {
                            "spec": [
                                {
                                    "name": "key",
                                    "type": "text",
                                    "label": "Parameter Name",
                                    "required": true
                                },
                                {
                                    "name": "type",
                                    "type": "select",
                                    "label": "Input Type",
                                    "options": [
                                        {
                                            "label": "Text",
                                            "value": "text",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "text",
                                                    "label": "Parameter Value"
                                                }
                                            ],
                                            "default": true
                                        },
                                        {
                                            "label": "Number",
                                            "value": "number",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "number",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Boolean",
                                            "value": "boolean",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "boolean",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Date",
                                            "value": "date",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "date",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Any",
                                            "value": "any",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "any",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "type": "collection",
                            "label": "Input Parameter",
                            "name": "value"
                        }
                    },
                    {
                        "name": "model",
                        "type": "select",
                        "label": "Model",
                        "required": true
                    },
                    {
                        "name": "max_tokens",
                        "type": "uinteger",
                        "label": "Max Completion Tokens"
                    },
                    {
                        "name": "messages",
                        "type": "array",
                        "label": "Messages",
                        "required": true,
                        "spec": {
                            "label": "Message",
                            "type": "collection",
                            "spec": [
                                {
                                    "name": "role",
                                    "type": "select",
                                    "label": "Role",
                                    "required": true,
                                    "options": {
                                        "store": [
                                            {
                                                "label": "System",
                                                "value": "system",
                                                "nested": [
                                                    {
                                                        "help": "Text content of the message on behalf of the selected __Role__.",
                                                        "name": "content",
                                                        "type": "text",
                                                        "label": "Text Content"
                                                    }
                                                ]
                                            },
                                            {
                                                "label": "User",
                                                "value": "user",
                                                "nested": [
                                                    {
                                                        "help": "Text content of the message on behalf of the selected __Role__.",
                                                        "name": "content",
                                                        "type": "text",
                                                        "label": "Text Content"
                                                    },
                                                    {
                                                        "name": "imageInputType",
                                                        "type": "select",
                                                        "label": "Image Input Type",
                                                        "mappable": false,
                                                        "options": [
                                                            {
                                                                "value": "url",
                                                                "label": "URL",
                                                                "nested": [
                                                                    {
                                                                        "name": "imageUrl",
                                                                        "label": "Image URL",
                                                                        "type": "url",
                                                                        "help": "Make sure to use a publically accessible URL.\nYou can test if your image is publically accessible by opening the link in an incognito tab."
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "value": "file",
                                                                "label": "Image File",
                                                                "nested": [
                                                                    {
                                                                        "name": "imageFile",
                                                                        "label": "Image",
                                                                        "type": "collection",
                                                                        "spec": [
                                                                            {
                                                                                "name": "imageFilename",
                                                                                "type": "filename",
                                                                                "label": "Image Filename",
                                                                                "semantic": "file:name",
                                                                                "extension": [
                                                                                    "jpg",
                                                                                    "jpeg",
                                                                                    "png",
                                                                                    "webp",
                                                                                    "gif"
                                                                                ],
                                                                                "help": "Accepted extensions: `.jpg`, `.jpeg`, `.png`, `.webp` and `.gif`."
                                                                            },
                                                                            {
                                                                                "name": "imageData",
                                                                                "type": "buffer",
                                                                                "label": "Image Data",
                                                                                "semantic": "file:data"
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "name": "imageDetail",
                                                        "type": "select",
                                                        "label": "Image Detail",
                                                        "advanced": true,
                                                        "options": [
                                                            {
                                                                "value": "auto",
                                                                "default": true,
                                                                "label": "Auto"
                                                            },
                                                            {
                                                                "value": "high",
                                                                "label": "High"
                                                            },
                                                            {
                                                                "value": "low",
                                                                "label": "Low"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "label": "Assistant",
                                                "value": "assistant",
                                                "nested": [
                                                    {
                                                        "help": "Text content of the message on behalf of the selected __Role__.",
                                                        "name": "content",
                                                        "type": "text",
                                                        "label": "Text Content"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ],
                            "name": "value"
                        }
                    },
                    {
                        "name": "response_format",
                        "type": "select",
                        "label": "Response Format",
                        "validate": {
                            "enum": [
                                "text",
                                "json_object"
                            ]
                        }
                    }
                ],
                "interface": [
                    {
                        "name": "result",
                        "type": "any",
                        "label": "Result"
                    },
                    {
                        "name": "id",
                        "type": "text",
                        "label": "ID"
                    },
                    {
                        "name": "object",
                        "type": "text",
                        "label": "Object"
                    },
                    {
                        "name": "created",
                        "type": "date",
                        "label": "Created"
                    },
                    {
                        "name": "model",
                        "type": "text",
                        "label": "Model"
                    },
                    {
                        "name": "choices",
                        "spec": {
                            "spec": [
                                {
                                    "name": "text",
                                    "type": "text",
                                    "label": "Text"
                                },
                                {
                                    "name": "index",
                                    "type": "number",
                                    "label": "Index"
                                },
                                {
                                    "name": "logprobs",
                                    "type": "text",
                                    "label": "Log Probs"
                                },
                                {
                                    "name": "finish_reason",
                                    "type": "text",
                                    "label": "Finish Reason"
                                },
                                {
                                    "name": "message",
                                    "spec": [
                                        {
                                            "name": "role",
                                            "type": "text",
                                            "label": "Role"
                                        },
                                        {
                                            "name": "content",
                                            "type": "text",
                                            "label": "Content"
                                        },
                                        {
                                            "name": "refusal",
                                            "type": "text",
                                            "label": "Refusal"
                                        }
                                    ],
                                    "type": "collection",
                                    "label": "Message"
                                }
                            ],
                            "type": "collection"
                        },
                        "type": "array",
                        "label": "Choices"
                    },
                    {
                        "name": "usage",
                        "spec": [
                            {
                                "name": "prompt_tokens",
                                "type": "number",
                                "label": "Prompt Tokens"
                            },
                            {
                                "name": "completion_tokens",
                                "type": "text",
                                "label": "Completion Tokens"
                            },
                            {
                                "name": "total_tokens",
                                "type": "number",
                                "label": "Total Tokens"
                            },
                            {
                                "name": "prompt_tokens_details",
                                "spec": [
                                    {
                                        "name": "cached_tokens",
                                        "type": "uinteger",
                                        "label": "Cached Tokens"
                                    },
                                    {
                                        "name": "text_tokens",
                                        "type": "uinteger",
                                        "label": "Text Tokens"
                                    },
                                    {
                                        "name": "image_tokens",
                                        "type": "uinteger",
                                        "label": "Image Tokens"
                                    },
                                    {
                                        "name": "audio_tokens",
                                        "type": "uinteger",
                                        "label": "Audio Tokens"
                                    }
                                ],
                                "type": "collection",
                                "label": "Prompt Tokens Details"
                            },
                            {
                                "name": "completion_tokens_details",
                                "spec": [
                                    {
                                        "name": "reasoning_tokens",
                                        "type": "uinteger",
                                        "label": "Reasoning Tokens"
                                    },
                                    {
                                        "name": "text_tokens",
                                        "type": "uinteger",
                                        "label": "Text Tokens"
                                    },
                                    {
                                        "name": "audio_tokens",
                                        "type": "uinteger",
                                        "label": "Audio Tokens"
                                    }
                                ],
                                "type": "collection",
                                "label": "Completion Tokens Details"
                            }
                        ],
                        "type": "collection",
                        "label": "Usage"
                    },
                    {
                        "name": "system_fingerprint",
                        "type": "text",
                        "label": "System Fingerprint"
                    }
                ]
            }
        },
        {
            "id": 11,
            "module": "userapi-ai:ImagineByPrompt",
            "version": 1,
            "parameters": {
                "__IMTCONN__": 2458846
            },
            "mapper": {
                "prompt": "{{9.result}} male , comics style, action scene  --cref https://s.mj.run/35IdXMZqEvk --cw 0 --sref https://s.mj.run/vz7TW8sJp-A --ar 16:9"
            },
            "metadata": {
                "designer": {
                    "x": 1200,
                    "y": 0
                },
                "restore": {
                    "parameters": {
                        "__IMTCONN__": {
                            "label": "MJ (mr.rutra@gmail.com)",
                            "data": {
                                "scoped": "true",
                                "connection": "userapi-ai"
                            }
                        }
                    },
                    "expect": {
                        "webhook_type": {
                            "mode": "chose",
                            "label": "Empty"
                        },
                        "is_disable_prefilter": {
                            "mode": "chose"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:userapi-ai",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "prompt",
                        "type": "text",
                        "label": "Prompt to generate image",
                        "required": true
                    },
                    {
                        "name": "webhook_url",
                        "type": "url",
                        "label": "Webhook Url. You will be POSTed by this url about progress/result of generation"
                    },
                    {
                        "name": "webhook_type",
                        "type": "select",
                        "label": "Webhook type. If Webhook Url defined - you can specify when you need to get result of your imagine",
                        "validate": {
                            "enum": [
                                "progress",
                                "result"
                            ]
                        }
                    },
                    {
                        "name": "callback_id",
                        "type": "text",
                        "label": "Callback ID. This unique identifier will be sent back to you via POST request in webhook to track the progress/result of the task"
                    },
                    {
                        "name": "account_hash",
                        "type": "uuid",
                        "label": "Hash of the specific account to be used for generating the image"
                    },
                    {
                        "name": "is_disable_prefilter",
                        "type": "boolean",
                        "label": "Disable prefilter?"
                    }
                ]
            }
        },
        {
            "id": 12,
            "module": "util:FunctionSleep",
            "version": 1,
            "parameters": {},
            "mapper": {
                "duration": "300"
            },
            "metadata": {
                "designer": {
                    "x": 1500,
                    "y": 0
                },
                "restore": {},
                "expect": [
                    {
                        "name": "duration",
                        "type": "uinteger",
                        "label": "Delay",
                        "required": true,
                        "validate": {
                            "max": 300,
                            "min": 1
                        }
                    }
                ]
            }
        },
        {
            "id": 13,
            "module": "userapi-ai:status",
            "version": 1,
            "parameters": {
                "__IMTCONN__": 2458846
            },
            "mapper": {
                "hash": "{{11.hash}}"
            },
            "metadata": {
                "designer": {
                    "x": 1800,
                    "y": 0
                },
                "restore": {
                    "parameters": {
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "userapi-ai"
                            },
                            "label": "MJ (mr.rutra@gmail.com)"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:userapi-ai",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "hash",
                        "type": "uuid",
                        "label": "Task hash",
                        "required": true
                    }
                ]
            }
        },
        {
            "id": 14,
            "module": "math:EvaluateExpression",
            "version": 1,
            "parameters": {},
            "mapper": {
                "expression": "randomInt(1, 4)"
            },
            "metadata": {
                "designer": {
                    "x": 2100,
                    "y": 0
                },
                "restore": {},
                "expect": [
                    {
                        "name": "expression",
                        "type": "text",
                        "label": "Expression",
                        "required": true
                    }
                ]
            }
        },
        {
            "id": 15,
            "module": "userapi-ai:Upscale",
            "version": 1,
            "parameters": {
                "__IMTCONN__": 2458846
            },
            "mapper": {
                "hash": "{{13.hash}}",
                "choice": "{{14.result}}"
            },
            "metadata": {
                "designer": {
                    "x": 2400,
                    "y": 0
                },
                "restore": {
                    "parameters": {
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "userapi-ai"
                            },
                            "label": "MJ (mr.rutra@gmail.com)"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:userapi-ai",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "hash",
                        "type": "uuid",
                        "label": "The hash of the task that needs to be upscaled",
                        "required": true
                    },
                    {
                        "name": "choice",
                        "type": "integer",
                        "label": "The position of the image that needs to be upscaled"
                    },
                    {
                        "name": "webhook_url",
                        "type": "url",
                        "label": "Webhook Url. You will be POSTed by this url about result of generation"
                    },
                    {
                        "name": "callback_id",
                        "type": "text",
                        "label": "Callback ID. This unique identifier will be sent back to you via POST request in webhook to track the progress/result of the task"
                    }
                ]
            }
        },
        {
            "id": 16,
            "module": "util:FunctionSleep",
            "version": 1,
            "parameters": {},
            "mapper": {
                "duration": "60"
            },
            "metadata": {
                "designer": {
                    "x": 2700,
                    "y": 0
                },
                "restore": {},
                "expect": [
                    {
                        "name": "duration",
                        "type": "uinteger",
                        "label": "Delay",
                        "required": true,
                        "validate": {
                            "max": 300,
                            "min": 1
                        }
                    }
                ]
            }
        },
        {
            "id": 18,
            "module": "userapi-ai:status",
            "version": 1,
            "parameters": {
                "__IMTCONN__": 2458846
            },
            "mapper": {
                "hash": "{{15.hash}}"
            },
            "metadata": {
                "designer": {
                    "x": 3000,
                    "y": 0
                },
                "restore": {
                    "parameters": {
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "userapi-ai"
                            },
                            "label": "MJ (mr.rutra@gmail.com)"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:userapi-ai",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "hash",
                        "type": "uuid",
                        "label": "Task hash",
                        "required": true
                    }
                ]
            }
        },
        {
            "id": 3,
            "module": "openai-gpt-3:CreateCompletion",
            "version": 1,
            "parameters": {
                "__IMTCONN__": 3933155
            },
            "mapper": {
                "select": "chat",
                "temperature": "1.0",
                "top_p": "1",
                "n_completions": "1",
                "model": "gpt-4o-mini",
                "max_tokens": "0",
                "messages": [
                    {
                        "role": "system",
                        "content": "Ты помощник для создания JSON-объектов для Telegraph API. Твоя задача — преобразовать предоставленную статью, ключевые слова и ссылку на изображение в массив объектов DOM. Формат должен быть следующим:\n\n1. **Изображение:**\n   - Первым элементом JSON добавляй объект с тегом `img`, где значение `src` будет ссылкой на изображение.\n\n2. **Основной текст статьи:**\n   - Разделяй статью на абзацы по пустым строкам. Каждый абзац оформляй как объект с тегом `p`.\n   - Если заголовок начинается с `###`, преобразуй его в объект с тегом `h3`.\n\n3. **Требования к JSON:**\n   - Каждый объект должен иметь поле `tag` (`img`, `p`, `h3`).\n   - Поле `children` должно быть массивом строк или вложенных объектов DOM.\n   - Атрибуты (например, `src` для изображения) передавай в поле `attrs`.\n\nСылки на ресурсы выводи так :\n{\n  \"tag\": \"a\",\n  \"attrs\": {\n    \"href\": \"URL\"\n  },\n  \"children\": [\"Текст ссылки\"]\n}\n\n4. **Пример**\n[\n  {\n    \"tag\": \"img\",\n    \"attrs\": {\n      \"src\": \"https://mayai.ru/wp-content/uploads/2024/12/kurs-make-com-dlya-viber-avtomatizatsiya-marketingovykh-rassylok.png\"\n    }\n  },\n  {\n    \"tag\": \"p\",\n    \"children\": [\n      \"Привет, пирожочки! Сегодня я хочу поделиться с вами своим опытом в мире SEO-оптимизации на маркетплейсах. Да, именно так, в этом быстро меняющемся мире, где каждый выше, чем очередная карточка товара, оптимизация становится важным инструментом для привлечения клиентов и увеличения продаж. Я освоил это искусство и готов рассказать вам, как сделать так, чтобы ваши карточки товаров сияли на просторах Интернета.\"\n    ]\n  },\n  {\n    \"tag\": \"h3\",\n    \"children\": [\"Почему SEO-оптимизация критически важна?\"]\n  },\n  {\n    \"tag\": \"p\",\n    \"children\": [\n      \"Начну с того, что оптимизация карточек товаров на маркетплейсах – это не просто модное слово, это жизненно важный аспект для бизнеса. Когда я только начинал, мне казалось, что достаточно просто загрузить фото товара и написать описание. Но реальность оказалась куда сложнее. Знаете, когда я впервые увидел, как высокие позиции конкурентов затмевают мои усилия, я понял, что нужно что-то менять.\"\n    ]\n  },\n  {\n    \"tag\": \"p\",\n    \"children\": [\n      \"Оптимизация включает использование релевантных слов и фраз в названии и описании товара. Например, если вы продаете наушники, убедитесь, что в описании есть такие фразы, как \\\"наушники с хорошим басом\\\", \\\"беспроводные наушники для спорта\\\" и так далее. Опытный пользователь сразу же понимает, какие слова позволят ему выделиться из толпы.\"\n    ]\n  },\n  {\n    \"tag\": \"h3\",\n    \"children\": [\"Факторы ранжирования: что влияет на вашу позицию\"]\n  },\n  {\n    \"tag\": \"p\",\n    \"children\": [\n      \"Один из моих знакомых, который работает на маркетплейсе, поделился, что алгоритмы площадок учитывают различные факторы ранжирования. Они обращают внимание на частоту показов, количество переходов, добавлений в корзину и, конечно, заказы. Я решил провести эксперимент и оптимизировал одно из своих предложений, добавив актуальные ключевые слова. И знаете что? Мои показатели начали расти. Чем больше ваш товар показывают, тем больше вероятность, что его купят.\"\n    ]\n  },\n  {\n    \"tag\": \"h3\",\n    \"children\": [\"Заключение: путь к успеху\"]\n  },\n  {\n    \"tag\": \"p\",\n    \"children\": [\n      \"Итак, пирожочки, если вы хотите, чтобы ваши карточки товаров находились на первых позициях в поиске, вам нужна стратегическая SEO-оптимизация. Это займет какое-то время, но результаты того стоят. Как говорили в одной притче: \\\"Упорный труд приносит плоды\\\".\"\n    ]\n  }\n]\n​"
                    },
                    {
                        "role": "user",
                        "content": "Картинка для статьи : {{18.result.url}}\nСоздай из этого статью : {{8.result}}\n\nВАЖНО - УБЕРИ все ```json обозначение на выходе только JSON код !!!",
                        "imageDetail": "auto"
                    }
                ],
                "response_format": "text"
            },
            "metadata": {
                "designer": {
                    "x": 3300,
                    "y": 0,
                    "name": "ПЕРЕВОДИМ СТАТЬЮ В JSON"
                },
                "restore": {
                    "parameters": {
                        "__IMTCONN__": {
                            "label": "Maya",
                            "data": {
                                "scoped": "true",
                                "connection": "openai-gpt-3"
                            }
                        }
                    },
                    "expect": {
                        "select": {
                            "label": "Create a Chat Completion (GPT and o1 models)"
                        },
                        "logit_bias": {
                            "mode": "chose"
                        },
                        "stop": {
                            "mode": "chose"
                        },
                        "additionalParameters": {
                            "mode": "chose"
                        },
                        "model": {
                            "mode": "chose",
                            "label": "gpt-4o-mini (system)"
                        },
                        "messages": {
                            "mode": "chose",
                            "items": [
                                {
                                    "role": {
                                        "mode": "chose",
                                        "label": "System"
                                    }
                                },
                                {
                                    "role": {
                                        "mode": "chose",
                                        "label": "User"
                                    },
                                    "imageInputType": {
                                        "mode": "chose",
                                        "label": "Empty"
                                    },
                                    "imageDetail": {
                                        "mode": "chose",
                                        "label": "Auto"
                                    }
                                }
                            ]
                        },
                        "response_format": {
                            "mode": "chose",
                            "label": "Text"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:openai-gpt-3",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "select",
                        "type": "select",
                        "label": "Select Method",
                        "required": true,
                        "validate": {
                            "enum": [
                                "chat",
                                "prompt"
                            ]
                        }
                    },
                    {
                        "name": "temperature",
                        "type": "number",
                        "label": "Temperature",
                        "validate": {
                            "max": 2,
                            "min": 0
                        }
                    },
                    {
                        "name": "top_p",
                        "type": "number",
                        "label": "Top P",
                        "validate": {
                            "max": 1,
                            "min": 0
                        }
                    },
                    {
                        "name": "n_completions",
                        "type": "number",
                        "label": "Number"
                    },
                    {
                        "name": "frequency_penalty",
                        "type": "number",
                        "label": "Frequency Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "presence_penalty",
                        "type": "number",
                        "label": "Presence Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "logit_bias",
                        "type": "array",
                        "label": "Token Probability",
                        "spec": {
                            "spec": [
                                {
                                    "name": "token",
                                    "type": "text",
                                    "label": "Token ID",
                                    "required": true
                                },
                                {
                                    "name": "probability",
                                    "type": "number",
                                    "label": "Probability",
                                    "required": true,
                                    "validate": {
                                        "max": 100,
                                        "min": -100
                                    }
                                }
                            ],
                            "type": "collection",
                            "label": "Token Probability",
                            "name": "value"
                        }
                    },
                    {
                        "name": "seed",
                        "type": "integer",
                        "label": "Seed"
                    },
                    {
                        "name": "stop",
                        "type": "array",
                        "label": "Stop Sequences",
                        "validate": {
                            "maxItems": 4
                        },
                        "spec": {
                            "type": "text",
                            "label": "Stop Sequence",
                            "name": "value"
                        }
                    },
                    {
                        "name": "additionalParameters",
                        "type": "array",
                        "label": "Other Input Parameters",
                        "spec": {
                            "spec": [
                                {
                                    "name": "key",
                                    "type": "text",
                                    "label": "Parameter Name",
                                    "required": true
                                },
                                {
                                    "name": "type",
                                    "type": "select",
                                    "label": "Input Type",
                                    "options": [
                                        {
                                            "label": "Text",
                                            "value": "text",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "text",
                                                    "label": "Parameter Value"
                                                }
                                            ],
                                            "default": true
                                        },
                                        {
                                            "label": "Number",
                                            "value": "number",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "number",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Boolean",
                                            "value": "boolean",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "boolean",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Date",
                                            "value": "date",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "date",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Any",
                                            "value": "any",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "any",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "type": "collection",
                            "label": "Input Parameter",
                            "name": "value"
                        }
                    },
                    {
                        "name": "model",
                        "type": "select",
                        "label": "Model",
                        "required": true
                    },
                    {
                        "name": "max_tokens",
                        "type": "uinteger",
                        "label": "Max Completion Tokens"
                    },
                    {
                        "name": "messages",
                        "type": "array",
                        "label": "Messages",
                        "required": true,
                        "spec": {
                            "label": "Message",
                            "type": "collection",
                            "spec": [
                                {
                                    "name": "role",
                                    "type": "select",
                                    "label": "Role",
                                    "required": true,
                                    "options": {
                                        "store": [
                                            {
                                                "label": "System",
                                                "value": "system",
                                                "nested": [
                                                    {
                                                        "help": "Text content of the message on behalf of the selected __Role__.",
                                                        "name": "content",
                                                        "type": "text",
                                                        "label": "Text Content"
                                                    }
                                                ]
                                            },
                                            {
                                                "label": "User",
                                                "value": "user",
                                                "nested": [
                                                    {
                                                        "help": "Text content of the message on behalf of the selected __Role__.",
                                                        "name": "content",
                                                        "type": "text",
                                                        "label": "Text Content"
                                                    },
                                                    {
                                                        "name": "imageInputType",
                                                        "type": "select",
                                                        "label": "Image Input Type",
                                                        "mappable": false,
                                                        "options": [
                                                            {
                                                                "value": "url",
                                                                "label": "URL",
                                                                "nested": [
                                                                    {
                                                                        "name": "imageUrl",
                                                                        "label": "Image URL",
                                                                        "type": "url",
                                                                        "help": "Make sure to use a publically accessible URL.\nYou can test if your image is publically accessible by opening the link in an incognito tab."
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "value": "file",
                                                                "label": "Image File",
                                                                "nested": [
                                                                    {
                                                                        "name": "imageFile",
                                                                        "label": "Image",
                                                                        "type": "collection",
                                                                        "spec": [
                                                                            {
                                                                                "name": "imageFilename",
                                                                                "type": "filename",
                                                                                "label": "Image Filename",
                                                                                "semantic": "file:name",
                                                                                "extension": [
                                                                                    "jpg",
                                                                                    "jpeg",
                                                                                    "png",
                                                                                    "webp",
                                                                                    "gif"
                                                                                ],
                                                                                "help": "Accepted extensions: `.jpg`, `.jpeg`, `.png`, `.webp` and `.gif`."
                                                                            },
                                                                            {
                                                                                "name": "imageData",
                                                                                "type": "buffer",
                                                                                "label": "Image Data",
                                                                                "semantic": "file:data"
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "name": "imageDetail",
                                                        "type": "select",
                                                        "label": "Image Detail",
                                                        "advanced": true,
                                                        "options": [
                                                            {
                                                                "value": "auto",
                                                                "default": true,
                                                                "label": "Auto"
                                                            },
                                                            {
                                                                "value": "high",
                                                                "label": "High"
                                                            },
                                                            {
                                                                "value": "low",
                                                                "label": "Low"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "label": "Assistant",
                                                "value": "assistant",
                                                "nested": [
                                                    {
                                                        "help": "Text content of the message on behalf of the selected __Role__.",
                                                        "name": "content",
                                                        "type": "text",
                                                        "label": "Text Content"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ],
                            "name": "value"
                        }
                    },
                    {
                        "name": "response_format",
                        "type": "select",
                        "label": "Response Format",
                        "validate": {
                            "enum": [
                                "text",
                                "json_object"
                            ]
                        }
                    }
                ],
                "interface": [
                    {
                        "name": "result",
                        "type": "any",
                        "label": "Result"
                    },
                    {
                        "name": "id",
                        "type": "text",
                        "label": "ID"
                    },
                    {
                        "name": "object",
                        "type": "text",
                        "label": "Object"
                    },
                    {
                        "name": "created",
                        "type": "date",
                        "label": "Created"
                    },
                    {
                        "name": "model",
                        "type": "text",
                        "label": "Model"
                    },
                    {
                        "name": "choices",
                        "spec": {
                            "spec": [
                                {
                                    "name": "text",
                                    "type": "text",
                                    "label": "Text"
                                },
                                {
                                    "name": "index",
                                    "type": "number",
                                    "label": "Index"
                                },
                                {
                                    "name": "logprobs",
                                    "type": "text",
                                    "label": "Log Probs"
                                },
                                {
                                    "name": "finish_reason",
                                    "type": "text",
                                    "label": "Finish Reason"
                                },
                                {
                                    "name": "message",
                                    "spec": [
                                        {
                                            "name": "role",
                                            "type": "text",
                                            "label": "Role"
                                        },
                                        {
                                            "name": "content",
                                            "type": "text",
                                            "label": "Content"
                                        },
                                        {
                                            "name": "refusal",
                                            "type": "text",
                                            "label": "Refusal"
                                        }
                                    ],
                                    "type": "collection",
                                    "label": "Message"
                                }
                            ],
                            "type": "collection"
                        },
                        "type": "array",
                        "label": "Choices"
                    },
                    {
                        "name": "usage",
                        "spec": [
                            {
                                "name": "prompt_tokens",
                                "type": "number",
                                "label": "Prompt Tokens"
                            },
                            {
                                "name": "completion_tokens",
                                "type": "text",
                                "label": "Completion Tokens"
                            },
                            {
                                "name": "total_tokens",
                                "type": "number",
                                "label": "Total Tokens"
                            },
                            {
                                "name": "prompt_tokens_details",
                                "spec": [
                                    {
                                        "name": "cached_tokens",
                                        "type": "uinteger",
                                        "label": "Cached Tokens"
                                    },
                                    {
                                        "name": "text_tokens",
                                        "type": "uinteger",
                                        "label": "Text Tokens"
                                    },
                                    {
                                        "name": "image_tokens",
                                        "type": "uinteger",
                                        "label": "Image Tokens"
                                    },
                                    {
                                        "name": "audio_tokens",
                                        "type": "uinteger",
                                        "label": "Audio Tokens"
                                    }
                                ],
                                "type": "collection",
                                "label": "Prompt Tokens Details"
                            },
                            {
                                "name": "completion_tokens_details",
                                "spec": [
                                    {
                                        "name": "reasoning_tokens",
                                        "type": "uinteger",
                                        "label": "Reasoning Tokens"
                                    },
                                    {
                                        "name": "text_tokens",
                                        "type": "uinteger",
                                        "label": "Text Tokens"
                                    },
                                    {
                                        "name": "audio_tokens",
                                        "type": "uinteger",
                                        "label": "Audio Tokens"
                                    }
                                ],
                                "type": "collection",
                                "label": "Completion Tokens Details"
                            }
                        ],
                        "type": "collection",
                        "label": "Usage"
                    },
                    {
                        "name": "system_fingerprint",
                        "type": "text",
                        "label": "System Fingerprint"
                    }
                ],
                "advanced": true
            }
        },
        {
            "id": 1,
            "module": "http:ActionSendData",
            "version": 3,
            "parameters": {
                "handleErrors": true,
                "useNewZLibDeCompress": true
            },
            "mapper": {
                "url": "https://api.telegra.ph/createAccount",
                "serializeUrl": false,
                "method": "post",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "qs": [],
                "bodyType": "raw",
                "parseResponse": true,
                "authUser": "",
                "authPass": "",
                "timeout": "",
                "shareCookies": false,
                "ca": "",
                "rejectUnauthorized": true,
                "followRedirect": true,
                "useQuerystring": false,
                "gzip": true,
                "useMtls": false,
                "contentType": "application/json",
                "data": "{\n  \"short_name\": \"Артур Хорошев\",\n  \"author_name\": \"Артур Хорошев\",\n  \"author_url\": \"https://kv-ai.ru\"\n}",
                "followAllRedirects": false
            },
            "metadata": {
                "designer": {
                    "x": 3600,
                    "y": 0,
                    "name": "Запрос на получение API"
                },
                "restore": {
                    "expect": {
                        "method": {
                            "mode": "chose",
                            "label": "POST"
                        },
                        "headers": {
                            "mode": "chose",
                            "items": [
                                null
                            ]
                        },
                        "qs": {
                            "mode": "chose"
                        },
                        "bodyType": {
                            "label": "Raw"
                        },
                        "contentType": {
                            "label": "JSON (application/json)"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "handleErrors",
                        "type": "boolean",
                        "label": "Evaluate all states as errors (except for 2xx and 3xx )",
                        "required": true
                    },
                    {
                        "name": "useNewZLibDeCompress",
                        "type": "hidden"
                    }
                ],
                "expect": [
                    {
                        "name": "url",
                        "type": "url",
                        "label": "URL",
                        "required": true
                    },
                    {
                        "name": "serializeUrl",
                        "type": "boolean",
                        "label": "Serialize URL",
                        "required": true
                    },
                    {
                        "name": "method",
                        "type": "select",
                        "label": "Method",
                        "required": true,
                        "validate": {
                            "enum": [
                                "get",
                                "head",
                                "post",
                                "put",
                                "patch",
                                "delete",
                                "options"
                            ]
                        }
                    },
                    {
                        "name": "headers",
                        "type": "array",
                        "label": "Headers",
                        "spec": [
                            {
                                "name": "name",
                                "label": "Name",
                                "type": "text",
                                "required": true
                            },
                            {
                                "name": "value",
                                "label": "Value",
                                "type": "text"
                            }
                        ]
                    },
                    {
                        "name": "qs",
                        "type": "array",
                        "label": "Query String",
                        "spec": [
                            {
                                "name": "name",
                                "label": "Name",
                                "type": "text",
                                "required": true
                            },
                            {
                                "name": "value",
                                "label": "Value",
                                "type": "text"
                            }
                        ]
                    },
                    {
                        "name": "bodyType",
                        "type": "select",
                        "label": "Body type",
                        "validate": {
                            "enum": [
                                "raw",
                                "x_www_form_urlencoded",
                                "multipart_form_data"
                            ]
                        }
                    },
                    {
                        "name": "parseResponse",
                        "type": "boolean",
                        "label": "Parse response",
                        "required": true
                    },
                    {
                        "name": "authUser",
                        "type": "text",
                        "label": "User name"
                    },
                    {
                        "name": "authPass",
                        "type": "password",
                        "label": "Password"
                    },
                    {
                        "name": "timeout",
                        "type": "uinteger",
                        "label": "Timeout",
                        "validate": {
                            "max": 300,
                            "min": 1
                        }
                    },
                    {
                        "name": "shareCookies",
                        "type": "boolean",
                        "label": "Share cookies with other HTTP modules",
                        "required": true
                    },
                    {
                        "name": "ca",
                        "type": "cert",
                        "label": "Self-signed certificate"
                    },
                    {
                        "name": "rejectUnauthorized",
                        "type": "boolean",
                        "label": "Reject connections that are using unverified (self-signed) certificates",
                        "required": true
                    },
                    {
                        "name": "followRedirect",
                        "type": "boolean",
                        "label": "Follow redirect",
                        "required": true
                    },
                    {
                        "name": "useQuerystring",
                        "type": "boolean",
                        "label": "Disable serialization of multiple same query string keys as arrays",
                        "required": true
                    },
                    {
                        "name": "gzip",
                        "type": "boolean",
                        "label": "Request compressed content",
                        "required": true
                    },
                    {
                        "name": "useMtls",
                        "type": "boolean",
                        "label": "Use Mutual TLS",
                        "required": true
                    },
                    {
                        "name": "contentType",
                        "type": "select",
                        "label": "Content type",
                        "validate": {
                            "enum": [
                                "text/plain",
                                "application/json",
                                "application/xml",
                                "text/xml",
                                "text/html",
                                "custom"
                            ]
                        }
                    },
                    {
                        "name": "data",
                        "type": "buffer",
                        "label": "Request content"
                    },
                    {
                        "name": "followAllRedirects",
                        "type": "boolean",
                        "label": "Follow all redirect",
                        "required": true
                    }
                ],
                "advanced": true
            }
        },
        {
            "id": 2,
            "module": "http:ActionSendData",
            "version": 3,
            "parameters": {
                "handleErrors": true,
                "useNewZLibDeCompress": true
            },
            "mapper": {
                "url": "https://api.telegra.ph/createPage",
                "serializeUrl": false,
                "method": "post",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "qs": [],
                "bodyType": "x_www_form_urlencoded",
                "parseResponse": true,
                "authUser": "",
                "authPass": "",
                "timeout": "",
                "shareCookies": false,
                "ca": "",
                "rejectUnauthorized": true,
                "followRedirect": true,
                "useQuerystring": false,
                "gzip": true,
                "useMtls": false,
                "formFields": [
                    {
                        "key": "access_token",
                        "value": "{{1.data.result.access_token}}"
                    },
                    {
                        "key": "title",
                        "value": "{{9.result}}"
                    },
                    {
                        "key": "author_name",
                        "value": "{{1.data.result.author_name}}"
                    },
                    {
                        "key": "author_url",
                        "value": "{{1.data.result.author_url}}"
                    },
                    {
                        "key": "content",
                        "value": "{{3.result}}"
                    },
                    {
                        "key": "return_content",
                        "value": "true"
                    }
                ],
                "followAllRedirects": false
            },
            "metadata": {
                "designer": {
                    "x": 3900,
                    "y": 0,
                    "name": "Создание страницы"
                },
                "restore": {
                    "expect": {
                        "method": {
                            "mode": "chose",
                            "label": "POST"
                        },
                        "headers": {
                            "mode": "chose",
                            "items": [
                                null
                            ]
                        },
                        "qs": {
                            "mode": "chose"
                        },
                        "bodyType": {
                            "label": "Application/x-www-form-urlencoded"
                        },
                        "formFields": {
                            "mode": "chose",
                            "items": [
                                null,
                                null,
                                null,
                                null,
                                null,
                                null
                            ]
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "handleErrors",
                        "type": "boolean",
                        "label": "Evaluate all states as errors (except for 2xx and 3xx )",
                        "required": true
                    },
                    {
                        "name": "useNewZLibDeCompress",
                        "type": "hidden"
                    }
                ],
                "expect": [
                    {
                        "name": "url",
                        "type": "url",
                        "label": "URL",
                        "required": true
                    },
                    {
                        "name": "serializeUrl",
                        "type": "boolean",
                        "label": "Serialize URL",
                        "required": true
                    },
                    {
                        "name": "method",
                        "type": "select",
                        "label": "Method",
                        "required": true,
                        "validate": {
                            "enum": [
                                "get",
                                "head",
                                "post",
                                "put",
                                "patch",
                                "delete",
                                "options"
                            ]
                        }
                    },
                    {
                        "name": "headers",
                        "type": "array",
                        "label": "Headers",
                        "spec": [
                            {
                                "name": "name",
                                "label": "Name",
                                "type": "text",
                                "required": true
                            },
                            {
                                "name": "value",
                                "label": "Value",
                                "type": "text"
                            }
                        ]
                    },
                    {
                        "name": "qs",
                        "type": "array",
                        "label": "Query String",
                        "spec": [
                            {
                                "name": "name",
                                "label": "Name",
                                "type": "text",
                                "required": true
                            },
                            {
                                "name": "value",
                                "label": "Value",
                                "type": "text"
                            }
                        ]
                    },
                    {
                        "name": "bodyType",
                        "type": "select",
                        "label": "Body type",
                        "validate": {
                            "enum": [
                                "raw",
                                "x_www_form_urlencoded",
                                "multipart_form_data"
                            ]
                        }
                    },
                    {
                        "name": "parseResponse",
                        "type": "boolean",
                        "label": "Parse response",
                        "required": true
                    },
                    {
                        "name": "authUser",
                        "type": "text",
                        "label": "User name"
                    },
                    {
                        "name": "authPass",
                        "type": "password",
                        "label": "Password"
                    },
                    {
                        "name": "timeout",
                        "type": "uinteger",
                        "label": "Timeout",
                        "validate": {
                            "max": 300,
                            "min": 1
                        }
                    },
                    {
                        "name": "shareCookies",
                        "type": "boolean",
                        "label": "Share cookies with other HTTP modules",
                        "required": true
                    },
                    {
                        "name": "ca",
                        "type": "cert",
                        "label": "Self-signed certificate"
                    },
                    {
                        "name": "rejectUnauthorized",
                        "type": "boolean",
                        "label": "Reject connections that are using unverified (self-signed) certificates",
                        "required": true
                    },
                    {
                        "name": "followRedirect",
                        "type": "boolean",
                        "label": "Follow redirect",
                        "required": true
                    },
                    {
                        "name": "useQuerystring",
                        "type": "boolean",
                        "label": "Disable serialization of multiple same query string keys as arrays",
                        "required": true
                    },
                    {
                        "name": "gzip",
                        "type": "boolean",
                        "label": "Request compressed content",
                        "required": true
                    },
                    {
                        "name": "useMtls",
                        "type": "boolean",
                        "label": "Use Mutual TLS",
                        "required": true
                    },
                    {
                        "name": "formFields",
                        "type": "array",
                        "label": "Fields",
                        "spec": [
                            {
                                "name": "key",
                                "label": "Key",
                                "type": "text",
                                "required": true
                            },
                            {
                                "name": "value",
                                "label": "Value",
                                "type": "text"
                            }
                        ]
                    },
                    {
                        "name": "followAllRedirects",
                        "type": "boolean",
                        "label": "Follow all redirect",
                        "required": true
                    }
                ],
                "advanced": true
            }
        },
        {
            "id": 19,
            "module": "google-sheets:addRow",
            "version": 2,
            "parameters": {
                "__IMTCONN__": 2487103
            },
            "mapper": {
                "mode": "select",
                "insertUnformatted": false,
                "valueInputOption": "USER_ENTERED",
                "insertDataOption": "INSERT_ROWS",
                "from": "drive",
                "spreadsheetId": "/1YUdCyN9AeSk-tMucVuIoagqDl4xixlEGIMi_IGa0np8",
                "sheetId": "Лист1",
                "includesHeaders": true,
                "values": {
                    "0": "{{2.data.result.title}}",
                    "1": "{{2.data.result.url}}"
                }
            },
            "metadata": {
                "designer": {
                    "x": 4200,
                    "y": 0
                },
                "restore": {
                    "parameters": {
                        "__IMTCONN__": {
                            "label": "My Google connection (mr.rutra@gmail.com)",
                            "data": {
                                "scoped": "true",
                                "connection": "google"
                            }
                        }
                    },
                    "expect": {
                        "mode": {
                            "label": "Search by path"
                        },
                        "insertUnformatted": {
                            "mode": "chose"
                        },
                        "valueInputOption": {
                            "mode": "chose",
                            "label": "User entered"
                        },
                        "insertDataOption": {
                            "mode": "chose",
                            "label": "Insert rows"
                        },
                        "from": {
                            "label": "My Drive"
                        },
                        "spreadsheetId": {
                            "path": [
                                "Ссылки на статьи в телеграф"
                            ]
                        },
                        "sheetId": {
                            "label": "Лист1"
                        },
                        "includesHeaders": {
                            "nested": [
                                {
                                    "name": "values",
                                    "label": "Values",
                                    "type": "collection",
                                    "spec": [
                                        {
                                            "name": "0",
                                            "label": "A",
                                            "type": "text"
                                        },
                                        {
                                            "name": "1",
                                            "label": "B",
                                            "type": "text"
                                        },
                                        {
                                            "name": "2",
                                            "label": "C",
                                            "type": "text"
                                        },
                                        {
                                            "name": "3",
                                            "label": "D",
                                            "type": "text"
                                        },
                                        {
                                            "name": "4",
                                            "label": "E",
                                            "type": "text"
                                        },
                                        {
                                            "name": "5",
                                            "label": "F",
                                            "type": "text"
                                        },
                                        {
                                            "name": "6",
                                            "label": "G",
                                            "type": "text"
                                        },
                                        {
                                            "name": "7",
                                            "label": "H",
                                            "type": "text"
                                        },
                                        {
                                            "name": "8",
                                            "label": "I",
                                            "type": "text"
                                        },
                                        {
                                            "name": "9",
                                            "label": "J",
                                            "type": "text"
                                        },
                                        {
                                            "name": "10",
                                            "label": "K",
                                            "type": "text"
                                        },
                                        {
                                            "name": "11",
                                            "label": "L",
                                            "type": "text"
                                        },
                                        {
                                            "name": "12",
                                            "label": "M",
                                            "type": "text"
                                        },
                                        {
                                            "name": "13",
                                            "label": "N",
                                            "type": "text"
                                        },
                                        {
                                            "name": "14",
                                            "label": "O",
                                            "type": "text"
                                        },
                                        {
                                            "name": "15",
                                            "label": "P",
                                            "type": "text"
                                        },
                                        {
                                            "name": "16",
                                            "label": "Q",
                                            "type": "text"
                                        },
                                        {
                                            "name": "17",
                                            "label": "R",
                                            "type": "text"
                                        },
                                        {
                                            "name": "18",
                                            "label": "S",
                                            "type": "text"
                                        },
                                        {
                                            "name": "19",
                                            "label": "T",
                                            "type": "text"
                                        },
                                        {
                                            "name": "20",
                                            "label": "U",
                                            "type": "text"
                                        },
                                        {
                                            "name": "21",
                                            "label": "V",
                                            "type": "text"
                                        },
                                        {
                                            "name": "22",
                                            "label": "W",
                                            "type": "text"
                                        },
                                        {
                                            "name": "23",
                                            "label": "X",
                                            "type": "text"
                                        },
                                        {
                                            "name": "24",
                                            "label": "Y",
                                            "type": "text"
                                        },
                                        {
                                            "name": "25",
                                            "label": "Z",
                                            "type": "text"
                                        }
                                    ]
                                }
                            ],
                            "label": "Yes"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:google",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "mode",
                        "type": "select",
                        "label": "Search Method",
                        "required": true,
                        "validate": {
                            "enum": [
                                "select",
                                "fromAll",
                                "map"
                            ]
                        }
                    },
                    {
                        "name": "insertUnformatted",
                        "type": "boolean",
                        "label": "Unformatted",
                        "required": true
                    },
                    {
                        "name": "valueInputOption",
                        "type": "select",
                        "label": "Value input option",
                        "validate": {
                            "enum": [
                                "USER_ENTERED",
                                "RAW"
                            ]
                        }
                    },
                    {
                        "name": "insertDataOption",
                        "type": "select",
                        "label": "Insert data option",
                        "validate": {
                            "enum": [
                                "INSERT_ROWS",
                                "OVERWRITE"
                            ]
                        }
                    },
                    {
                        "name": "from",
                        "type": "select",
                        "label": "Drive",
                        "required": true,
                        "validate": {
                            "enum": [
                                "drive",
                                "share",
                                "team"
                            ]
                        }
                    },
                    {
                        "name": "spreadsheetId",
                        "type": "file",
                        "label": "Spreadsheet ID",
                        "required": true
                    },
                    {
                        "name": "sheetId",
                        "type": "select",
                        "label": "Sheet Name",
                        "required": true
                    },
                    {
                        "name": "includesHeaders",
                        "type": "select",
                        "label": "Table contains headers",
                        "required": true,
                        "validate": {
                            "enum": [
                                true,
                                false
                            ]
                        }
                    },
                    {
                        "name": "values",
                        "type": "collection",
                        "label": "Values",
                        "spec": [
                            {
                                "name": "0",
                                "type": "text",
                                "label": "A"
                            },
                            {
                                "name": "1",
                                "type": "text",
                                "label": "B"
                            },
                            {
                                "name": "2",
                                "type": "text",
                                "label": "C"
                            },
                            {
                                "name": "3",
                                "type": "text",
                                "label": "D"
                            },
                            {
                                "name": "4",
                                "type": "text",
                                "label": "E"
                            },
                            {
                                "name": "5",
                                "type": "text",
                                "label": "F"
                            },
                            {
                                "name": "6",
                                "type": "text",
                                "label": "G"
                            },
                            {
                                "name": "7",
                                "type": "text",
                                "label": "H"
                            },
                            {
                                "name": "8",
                                "type": "text",
                                "label": "I"
                            },
                            {
                                "name": "9",
                                "type": "text",
                                "label": "J"
                            },
                            {
                                "name": "10",
                                "type": "text",
                                "label": "K"
                            },
                            {
                                "name": "11",
                                "type": "text",
                                "label": "L"
                            },
                            {
                                "name": "12",
                                "type": "text",
                                "label": "M"
                            },
                            {
                                "name": "13",
                                "type": "text",
                                "label": "N"
                            },
                            {
                                "name": "14",
                                "type": "text",
                                "label": "O"
                            },
                            {
                                "name": "15",
                                "type": "text",
                                "label": "P"
                            },
                            {
                                "name": "16",
                                "type": "text",
                                "label": "Q"
                            },
                            {
                                "name": "17",
                                "type": "text",
                                "label": "R"
                            },
                            {
                                "name": "18",
                                "type": "text",
                                "label": "S"
                            },
                            {
                                "name": "19",
                                "type": "text",
                                "label": "T"
                            },
                            {
                                "name": "20",
                                "type": "text",
                                "label": "U"
                            },
                            {
                                "name": "21",
                                "type": "text",
                                "label": "V"
                            },
                            {
                                "name": "22",
                                "type": "text",
                                "label": "W"
                            },
                            {
                                "name": "23",
                                "type": "text",
                                "label": "X"
                            },
                            {
                                "name": "24",
                                "type": "text",
                                "label": "Y"
                            },
                            {
                                "name": "25",
                                "type": "text",
                                "label": "Z"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": 20,
            "module": "google-sheets:deleteRow",
            "version": 2,
            "parameters": {
                "__IMTCONN__": 2487103
            },
            "mapper": {
                "select": "list",
                "rowNumber": "1",
                "from": "drive",
                "spreadsheetId": "/1Xy9fl9wTIaDBNMeF-d_bXCdXchWuYX2B8JSjkmkahRg",
                "sheetId": 0
            },
            "metadata": {
                "designer": {
                    "x": 4500,
                    "y": 0
                },
                "restore": {
                    "parameters": {
                        "__IMTCONN__": {
                            "label": "My Google connection (mr.rutra@gmail.com)",
                            "data": {
                                "scoped": "true",
                                "connection": "google"
                            }
                        }
                    },
                    "expect": {
                        "select": {
                            "label": "Search by path"
                        },
                        "from": {
                            "label": "My Drive"
                        },
                        "spreadsheetId": {
                            "path": [
                                "LAYMI проект"
                            ]
                        },
                        "sheetId": {
                            "label": "Лист1"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:google",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "select",
                        "type": "select",
                        "label": "Search Method",
                        "required": true,
                        "validate": {
                            "enum": [
                                "list",
                                "fromAll",
                                "map"
                            ]
                        }
                    },
                    {
                        "name": "rowNumber",
                        "type": "uinteger",
                        "label": "Row number",
                        "required": true
                    },
                    {
                        "name": "from",
                        "type": "select",
                        "label": "Drive",
                        "required": true,
                        "validate": {
                            "enum": [
                                "drive",
                                "share",
                                "team"
                            ]
                        }
                    },
                    {
                        "name": "spreadsheetId",
                        "type": "file",
                        "label": "Spreadsheet ID",
                        "required": true
                    },
                    {
                        "name": "sheetId",
                        "type": "select",
                        "label": "Sheet ID",
                        "required": true
                    }
                ]
            }
        }
    ],
    "metadata": {
        "instant": false,
        "version": 1,
        "scenario": {
            "roundtrips": 1,
            "maxErrors": 3,
            "autoCommit": true,
            "autoCommitTriggerLast": true,
            "sequential": false,
            "slots": null,
            "confidential": false,
            "dataloss": false,
            "dlq": false,
            "freshVariables": false
        },
        "designer": {
            "orphans": [
                [
                    {
                        "id": 21,
                        "module": "openai-gpt-3:CreateCompletion",
                        "version": 1,
                        "parameters": {
                            "__IMTCONN__": 3933155
                        },
                        "mapper": {
                            "select": "chat",
                            "temperature": "1.0",
                            "top_p": "1",
                            "n_completions": "1",
                            "model": "gpt-4o-mini",
                            "max_tokens": "0",
                            "messages": [
                                {
                                    "role": "system",
                                    "content": "Ты помощник для создания JSON-объектов для Telegraph API. Твоя задача — преобразовать предоставленную статью, ключевые слова и ссылку на изображение в массив объектов DOM. Формат должен быть следующим:\n\n1. **Изображение:**\n   - Первым элементом JSON добавляй объект с тегом `img`, где значение `src` будет ссылкой на изображение.\n\n2. **Основной текст статьи:**\n   - Разделяй статью на абзацы по пустым строкам. Каждый абзац оформляй как объект с тегом `p`.\n   - Если заголовок начинается с `###`, преобразуй его в объект с тегом `h3`.\n\n3. **Требования к JSON:**\n   - Каждый объект должен иметь поле `tag` (`img`, `p`, `h3`).\n   - Поле `children` должно быть массивом строк или вложенных объектов DOM.\n   - Атрибуты (например, `src` для изображения) передавай в поле `attrs`.\n\nСылки на ресурсы выводи так :\n{\n  \"tag\": \"a\",\n  \"attrs\": {\n    \"href\": \"URL\"\n  },\n  \"children\": [\"Текст ссылки\"]\n}\n\n4. **Пример**\n[\n  {\n    \"tag\": \"img\",\n    \"attrs\": {\n      \"src\": \"https://mayai.ru/wp-content/uploads/2024/12/kurs-make-com-dlya-viber-avtomatizatsiya-marketingovykh-rassylok.png\"\n    }\n  },\n  {\n    \"tag\": \"p\",\n    \"children\": [\n      \"Привет, пирожочки! Сегодня я хочу поделиться с вами своим опытом в мире SEO-оптимизации на маркетплейсах. Да, именно так, в этом быстро меняющемся мире, где каждый выше, чем очередная карточка товара, оптимизация становится важным инструментом для привлечения клиентов и увеличения продаж. Я освоил это искусство и готов рассказать вам, как сделать так, чтобы ваши карточки товаров сияли на просторах Интернета.\"\n    ]\n  },\n  {\n    \"tag\": \"h3\",\n    \"children\": [\"Почему SEO-оптимизация критически важна?\"]\n  },\n  {\n    \"tag\": \"p\",\n    \"children\": [\n      \"Начну с того, что оптимизация карточек товаров на маркетплейсах – это не просто модное слово, это жизненно важный аспект для бизнеса. Когда я только начинал, мне казалось, что достаточно просто загрузить фото товара и написать описание. Но реальность оказалась куда сложнее. Знаете, когда я впервые увидел, как высокие позиции конкурентов затмевают мои усилия, я понял, что нужно что-то менять.\"\n    ]\n  },\n  {\n    \"tag\": \"p\",\n    \"children\": [\n      \"Оптимизация включает использование релевантных слов и фраз в названии и описании товара. Например, если вы продаете наушники, убедитесь, что в описании есть такие фразы, как \\\"наушники с хорошим басом\\\", \\\"беспроводные наушники для спорта\\\" и так далее. Опытный пользователь сразу же понимает, какие слова позволят ему выделиться из толпы.\"\n    ]\n  },\n  {\n    \"tag\": \"h3\",\n    \"children\": [\"Факторы ранжирования: что влияет на вашу позицию\"]\n  },\n  {\n    \"tag\": \"p\",\n    \"children\": [\n      \"Один из моих знакомых, который работает на маркетплейсе, поделился, что алгоритмы площадок учитывают различные факторы ранжирования. Они обращают внимание на частоту показов, количество переходов, добавлений в корзину и, конечно, заказы. Я решил провести эксперимент и оптимизировал одно из своих предложений, добавив актуальные ключевые слова. И знаете что? Мои показатели начали расти. Чем больше ваш товар показывают, тем больше вероятность, что его купят.\"\n    ]\n  },\n  {\n    \"tag\": \"h3\",\n    \"children\": [\"Заключение: путь к успеху\"]\n  },\n  {\n    \"tag\": \"p\",\n    \"children\": [\n      \"Итак, пирожочки, если вы хотите, чтобы ваши карточки товаров находились на первых позициях в поиске, вам нужна стратегическая SEO-оптимизация. Это займет какое-то время, но результаты того стоят. Как говорили в одной притче: \\\"Упорный труд приносит плоды\\\".\"\n    ]\n  }\n]\n​"
                                },
                                {
                                    "role": "user",
                                    "content": "Картинка для статьи : {{18.result.url}}\nСоздай из этого статью : {{8.result}}\n\nВАЖНО - УБЕРИ все ```json обозначение на выходе только JSON код !!!",
                                    "imageDetail": "auto"
                                }
                            ],
                            "response_format": "text"
                        },
                        "metadata": {
                            "designer": {
                                "x": 30,
                                "y": -389,
                                "name": "ПЕРЕВОДИМ СТАТЬЮ В JSON",
                                "messages": [
                                    {
                                        "category": "link",
                                        "severity": "warning",
                                        "message": "The module is not connected to the data flow."
                                    },
                                    {
                                        "category": "reference",
                                        "severity": "warning",
                                        "message": "Referenced module 'OpenAI (ChatGPT, Whisper, DALL-E) - Create a Completion (Prompt) (GPT-3, GPT-3.5, GPT-4)' [8] is not accessible."
                                    },
                                    {
                                        "category": "reference",
                                        "severity": "warning",
                                        "message": "Referenced module 'Userapi.AI - API layer to Midjourney - Get the Status of a Task by its Hash' [18] is not accessible."
                                    }
                                ]
                            },
                            "restore": {
                                "parameters": {
                                    "__IMTCONN__": {
                                        "label": "Maya",
                                        "data": {
                                            "scoped": "true",
                                            "connection": "openai-gpt-3"
                                        }
                                    }
                                },
                                "expect": {
                                    "select": {
                                        "label": "Create a Chat Completion (GPT and o1 models)"
                                    },
                                    "logit_bias": {
                                        "mode": "chose"
                                    },
                                    "stop": {
                                        "mode": "chose"
                                    },
                                    "additionalParameters": {
                                        "mode": "chose"
                                    },
                                    "model": {
                                        "mode": "chose",
                                        "label": "gpt-4o-mini (system)"
                                    },
                                    "messages": {
                                        "mode": "chose",
                                        "items": [
                                            {
                                                "role": {
                                                    "mode": "chose",
                                                    "label": "System"
                                                }
                                            },
                                            {
                                                "role": {
                                                    "mode": "chose",
                                                    "label": "User"
                                                },
                                                "imageInputType": {
                                                    "mode": "chose",
                                                    "label": "Empty"
                                                },
                                                "imageDetail": {
                                                    "mode": "chose",
                                                    "label": "Auto"
                                                }
                                            }
                                        ]
                                    },
                                    "response_format": {
                                        "mode": "chose",
                                        "label": "Text"
                                    }
                                }
                            },
                            "parameters": [
                                {
                                    "name": "__IMTCONN__",
                                    "type": "account:openai-gpt-3",
                                    "label": "Connection",
                                    "required": true
                                }
                            ],
                            "expect": [
                                {
                                    "name": "select",
                                    "type": "select",
                                    "label": "Select Method",
                                    "required": true,
                                    "validate": {
                                        "enum": [
                                            "chat",
                                            "prompt"
                                        ]
                                    }
                                },
                                {
                                    "name": "temperature",
                                    "type": "number",
                                    "label": "Temperature",
                                    "validate": {
                                        "max": 2,
                                        "min": 0
                                    }
                                },
                                {
                                    "name": "top_p",
                                    "type": "number",
                                    "label": "Top P",
                                    "validate": {
                                        "max": 1,
                                        "min": 0
                                    }
                                },
                                {
                                    "name": "n_completions",
                                    "type": "number",
                                    "label": "Number"
                                },
                                {
                                    "name": "frequency_penalty",
                                    "type": "number",
                                    "label": "Frequency Penalty",
                                    "validate": {
                                        "max": 2,
                                        "min": -2
                                    }
                                },
                                {
                                    "name": "presence_penalty",
                                    "type": "number",
                                    "label": "Presence Penalty",
                                    "validate": {
                                        "max": 2,
                                        "min": -2
                                    }
                                },
                                {
                                    "name": "logit_bias",
                                    "type": "array",
                                    "label": "Token Probability",
                                    "spec": {
                                        "spec": [
                                            {
                                                "name": "token",
                                                "type": "text",
                                                "label": "Token ID",
                                                "required": true
                                            },
                                            {
                                                "name": "probability",
                                                "type": "number",
                                                "label": "Probability",
                                                "required": true,
                                                "validate": {
                                                    "max": 100,
                                                    "min": -100
                                                }
                                            }
                                        ],
                                        "type": "collection",
                                        "label": "Token Probability",
                                        "name": "value"
                                    }
                                },
                                {
                                    "name": "seed",
                                    "type": "integer",
                                    "label": "Seed"
                                },
                                {
                                    "name": "stop",
                                    "type": "array",
                                    "label": "Stop Sequences",
                                    "validate": {
                                        "maxItems": 4
                                    },
                                    "spec": {
                                        "type": "text",
                                        "label": "Stop Sequence",
                                        "name": "value"
                                    }
                                },
                                {
                                    "name": "additionalParameters",
                                    "type": "array",
                                    "label": "Other Input Parameters",
                                    "spec": {
                                        "spec": [
                                            {
                                                "name": "key",
                                                "type": "text",
                                                "label": "Parameter Name",
                                                "required": true
                                            },
                                            {
                                                "name": "type",
                                                "type": "select",
                                                "label": "Input Type",
                                                "options": [
                                                    {
                                                        "label": "Text",
                                                        "value": "text",
                                                        "nested": [
                                                            {
                                                                "name": "value",
                                                                "type": "text",
                                                                "label": "Parameter Value"
                                                            }
                                                        ],
                                                        "default": true
                                                    },
                                                    {
                                                        "label": "Number",
                                                        "value": "number",
                                                        "nested": [
                                                            {
                                                                "name": "value",
                                                                "type": "number",
                                                                "label": "Parameter Value"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "label": "Boolean",
                                                        "value": "boolean",
                                                        "nested": [
                                                            {
                                                                "name": "value",
                                                                "type": "boolean",
                                                                "label": "Parameter Value"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "label": "Date",
                                                        "value": "date",
                                                        "nested": [
                                                            {
                                                                "name": "value",
                                                                "type": "date",
                                                                "label": "Parameter Value"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "label": "Any",
                                                        "value": "any",
                                                        "nested": [
                                                            {
                                                                "name": "value",
                                                                "type": "any",
                                                                "label": "Parameter Value"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "type": "collection",
                                        "label": "Input Parameter",
                                        "name": "value"
                                    }
                                },
                                {
                                    "name": "model",
                                    "type": "select",
                                    "label": "Model",
                                    "required": true
                                },
                                {
                                    "name": "max_tokens",
                                    "type": "uinteger",
                                    "label": "Max Completion Tokens"
                                },
                                {
                                    "name": "messages",
                                    "type": "array",
                                    "label": "Messages",
                                    "required": true,
                                    "spec": {
                                        "label": "Message",
                                        "type": "collection",
                                        "spec": [
                                            {
                                                "name": "role",
                                                "type": "select",
                                                "label": "Role",
                                                "required": true,
                                                "options": {
                                                    "store": [
                                                        {
                                                            "label": "System",
                                                            "value": "system",
                                                            "nested": [
                                                                {
                                                                    "help": "Text content of the message on behalf of the selected __Role__.",
                                                                    "name": "content",
                                                                    "type": "text",
                                                                    "label": "Text Content"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "label": "User",
                                                            "value": "user",
                                                            "nested": [
                                                                {
                                                                    "help": "Text content of the message on behalf of the selected __Role__.",
                                                                    "name": "content",
                                                                    "type": "text",
                                                                    "label": "Text Content"
                                                                },
                                                                {
                                                                    "name": "imageInputType",
                                                                    "type": "select",
                                                                    "label": "Image Input Type",
                                                                    "mappable": false,
                                                                    "options": [
                                                                        {
                                                                            "value": "url",
                                                                            "label": "URL",
                                                                            "nested": [
                                                                                {
                                                                                    "name": "imageUrl",
                                                                                    "label": "Image URL",
                                                                                    "type": "url",
                                                                                    "help": "Make sure to use a publically accessible URL.\nYou can test if your image is publically accessible by opening the link in an incognito tab."
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "value": "file",
                                                                            "label": "Image File",
                                                                            "nested": [
                                                                                {
                                                                                    "name": "imageFile",
                                                                                    "label": "Image",
                                                                                    "type": "collection",
                                                                                    "spec": [
                                                                                        {
                                                                                            "name": "imageFilename",
                                                                                            "type": "filename",
                                                                                            "label": "Image Filename",
                                                                                            "semantic": "file:name",
                                                                                            "extension": [
                                                                                                "jpg",
                                                                                                "jpeg",
                                                                                                "png",
                                                                                                "webp",
                                                                                                "gif"
                                                                                            ],
                                                                                            "help": "Accepted extensions: `.jpg`, `.jpeg`, `.png`, `.webp` and `.gif`."
                                                                                        },
                                                                                        {
                                                                                            "name": "imageData",
                                                                                            "type": "buffer",
                                                                                            "label": "Image Data",
                                                                                            "semantic": "file:data"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "name": "imageDetail",
                                                                    "type": "select",
                                                                    "label": "Image Detail",
                                                                    "advanced": true,
                                                                    "options": [
                                                                        {
                                                                            "value": "auto",
                                                                            "default": true,
                                                                            "label": "Auto"
                                                                        },
                                                                        {
                                                                            "value": "high",
                                                                            "label": "High"
                                                                        },
                                                                        {
                                                                            "value": "low",
                                                                            "label": "Low"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "label": "Assistant",
                                                            "value": "assistant",
                                                            "nested": [
                                                                {
                                                                    "help": "Text content of the message on behalf of the selected __Role__.",
                                                                    "name": "content",
                                                                    "type": "text",
                                                                    "label": "Text Content"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            }
                                        ],
                                        "name": "value"
                                    }
                                },
                                {
                                    "name": "response_format",
                                    "type": "select",
                                    "label": "Response Format",
                                    "validate": {
                                        "enum": [
                                            "text",
                                            "json_object"
                                        ]
                                    }
                                }
                            ],
                            "interface": [
                                {
                                    "name": "result",
                                    "type": "any",
                                    "label": "Result"
                                },
                                {
                                    "name": "id",
                                    "type": "text",
                                    "label": "ID"
                                },
                                {
                                    "name": "object",
                                    "type": "text",
                                    "label": "Object"
                                },
                                {
                                    "name": "created",
                                    "type": "date",
                                    "label": "Created"
                                },
                                {
                                    "name": "model",
                                    "type": "text",
                                    "label": "Model"
                                },
                                {
                                    "name": "choices",
                                    "spec": {
                                        "spec": [
                                            {
                                                "name": "text",
                                                "type": "text",
                                                "label": "Text"
                                            },
                                            {
                                                "name": "index",
                                                "type": "number",
                                                "label": "Index"
                                            },
                                            {
                                                "name": "logprobs",
                                                "type": "text",
                                                "label": "Log Probs"
                                            },
                                            {
                                                "name": "finish_reason",
                                                "type": "text",
                                                "label": "Finish Reason"
                                            },
                                            {
                                                "name": "message",
                                                "spec": [
                                                    {
                                                        "name": "role",
                                                        "type": "text",
                                                        "label": "Role"
                                                    },
                                                    {
                                                        "name": "content",
                                                        "type": "text",
                                                        "label": "Content"
                                                    },
                                                    {
                                                        "name": "refusal",
                                                        "type": "text",
                                                        "label": "Refusal"
                                                    }
                                                ],
                                                "type": "collection",
                                                "label": "Message"
                                            }
                                        ],
                                        "type": "collection"
                                    },
                                    "type": "array",
                                    "label": "Choices"
                                },
                                {
                                    "name": "usage",
                                    "spec": [
                                        {
                                            "name": "prompt_tokens",
                                            "type": "number",
                                            "label": "Prompt Tokens"
                                        },
                                        {
                                            "name": "completion_tokens",
                                            "type": "text",
                                            "label": "Completion Tokens"
                                        },
                                        {
                                            "name": "total_tokens",
                                            "type": "number",
                                            "label": "Total Tokens"
                                        },
                                        {
                                            "name": "prompt_tokens_details",
                                            "spec": [
                                                {
                                                    "name": "cached_tokens",
                                                    "type": "uinteger",
                                                    "label": "Cached Tokens"
                                                },
                                                {
                                                    "name": "text_tokens",
                                                    "type": "uinteger",
                                                    "label": "Text Tokens"
                                                },
                                                {
                                                    "name": "image_tokens",
                                                    "type": "uinteger",
                                                    "label": "Image Tokens"
                                                },
                                                {
                                                    "name": "audio_tokens",
                                                    "type": "uinteger",
                                                    "label": "Audio Tokens"
                                                }
                                            ],
                                            "type": "collection",
                                            "label": "Prompt Tokens Details"
                                        },
                                        {
                                            "name": "completion_tokens_details",
                                            "spec": [
                                                {
                                                    "name": "reasoning_tokens",
                                                    "type": "uinteger",
                                                    "label": "Reasoning Tokens"
                                                },
                                                {
                                                    "name": "text_tokens",
                                                    "type": "uinteger",
                                                    "label": "Text Tokens"
                                                },
                                                {
                                                    "name": "audio_tokens",
                                                    "type": "uinteger",
                                                    "label": "Audio Tokens"
                                                }
                                            ],
                                            "type": "collection",
                                            "label": "Completion Tokens Details"
                                        }
                                    ],
                                    "type": "collection",
                                    "label": "Usage"
                                },
                                {
                                    "name": "system_fingerprint",
                                    "type": "text",
                                    "label": "System Fingerprint"
                                }
                            ],
                            "advanced": true
                        }
                    },
                    {
                        "id": 22,
                        "module": "http:ActionSendData",
                        "version": 3,
                        "parameters": {
                            "handleErrors": true,
                            "useNewZLibDeCompress": true
                        },
                        "mapper": {
                            "url": "https://api.telegra.ph/createAccount",
                            "serializeUrl": false,
                            "method": "post",
                            "headers": [
                                {
                                    "name": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "qs": [],
                            "bodyType": "raw",
                            "parseResponse": true,
                            "authUser": "",
                            "authPass": "",
                            "timeout": "",
                            "shareCookies": false,
                            "ca": "",
                            "rejectUnauthorized": true,
                            "followRedirect": true,
                            "useQuerystring": false,
                            "gzip": true,
                            "useMtls": false,
                            "contentType": "application/json",
                            "data": "{\n  \"short_name\": \"Артур Хорошев\",\n  \"author_name\": \"Артур Хорошев\",\n  \"author_url\": \"https://kv-ai.ru/\"\n}",
                            "followAllRedirects": false
                        },
                        "metadata": {
                            "designer": {
                                "x": 347,
                                "y": -391,
                                "name": "Запрос на получение API"
                            },
                            "restore": {
                                "expect": {
                                    "method": {
                                        "mode": "chose",
                                        "label": "POST"
                                    },
                                    "headers": {
                                        "mode": "chose",
                                        "items": [
                                            null
                                        ]
                                    },
                                    "qs": {
                                        "mode": "chose"
                                    },
                                    "bodyType": {
                                        "label": "Raw"
                                    },
                                    "contentType": {
                                        "label": "JSON (application/json)"
                                    }
                                }
                            },
                            "parameters": [
                                {
                                    "name": "handleErrors",
                                    "type": "boolean",
                                    "label": "Evaluate all states as errors (except for 2xx and 3xx )",
                                    "required": true
                                },
                                {
                                    "name": "useNewZLibDeCompress",
                                    "type": "hidden"
                                }
                            ],
                            "expect": [
                                {
                                    "name": "url",
                                    "type": "url",
                                    "label": "URL",
                                    "required": true
                                },
                                {
                                    "name": "serializeUrl",
                                    "type": "boolean",
                                    "label": "Serialize URL",
                                    "required": true
                                },
                                {
                                    "name": "method",
                                    "type": "select",
                                    "label": "Method",
                                    "required": true,
                                    "validate": {
                                        "enum": [
                                            "get",
                                            "head",
                                            "post",
                                            "put",
                                            "patch",
                                            "delete",
                                            "options"
                                        ]
                                    }
                                },
                                {
                                    "name": "headers",
                                    "type": "array",
                                    "label": "Headers",
                                    "spec": [
                                        {
                                            "name": "name",
                                            "label": "Name",
                                            "type": "text",
                                            "required": true
                                        },
                                        {
                                            "name": "value",
                                            "label": "Value",
                                            "type": "text"
                                        }
                                    ]
                                },
                                {
                                    "name": "qs",
                                    "type": "array",
                                    "label": "Query String",
                                    "spec": [
                                        {
                                            "name": "name",
                                            "label": "Name",
                                            "type": "text",
                                            "required": true
                                        },
                                        {
                                            "name": "value",
                                            "label": "Value",
                                            "type": "text"
                                        }
                                    ]
                                },
                                {
                                    "name": "bodyType",
                                    "type": "select",
                                    "label": "Body type",
                                    "validate": {
                                        "enum": [
                                            "raw",
                                            "x_www_form_urlencoded",
                                            "multipart_form_data"
                                        ]
                                    }
                                },
                                {
                                    "name": "parseResponse",
                                    "type": "boolean",
                                    "label": "Parse response",
                                    "required": true
                                },
                                {
                                    "name": "authUser",
                                    "type": "text",
                                    "label": "User name"
                                },
                                {
                                    "name": "authPass",
                                    "type": "password",
                                    "label": "Password"
                                },
                                {
                                    "name": "timeout",
                                    "type": "uinteger",
                                    "label": "Timeout",
                                    "validate": {
                                        "max": 300,
                                        "min": 1
                                    }
                                },
                                {
                                    "name": "shareCookies",
                                    "type": "boolean",
                                    "label": "Share cookies with other HTTP modules",
                                    "required": true
                                },
                                {
                                    "name": "ca",
                                    "type": "cert",
                                    "label": "Self-signed certificate"
                                },
                                {
                                    "name": "rejectUnauthorized",
                                    "type": "boolean",
                                    "label": "Reject connections that are using unverified (self-signed) certificates",
                                    "required": true
                                },
                                {
                                    "name": "followRedirect",
                                    "type": "boolean",
                                    "label": "Follow redirect",
                                    "required": true
                                },
                                {
                                    "name": "useQuerystring",
                                    "type": "boolean",
                                    "label": "Disable serialization of multiple same query string keys as arrays",
                                    "required": true
                                },
                                {
                                    "name": "gzip",
                                    "type": "boolean",
                                    "label": "Request compressed content",
                                    "required": true
                                },
                                {
                                    "name": "useMtls",
                                    "type": "boolean",
                                    "label": "Use Mutual TLS",
                                    "required": true
                                },
                                {
                                    "name": "contentType",
                                    "type": "select",
                                    "label": "Content type",
                                    "validate": {
                                        "enum": [
                                            "text/plain",
                                            "application/json",
                                            "application/xml",
                                            "text/xml",
                                            "text/html",
                                            "custom"
                                        ]
                                    }
                                },
                                {
                                    "name": "data",
                                    "type": "buffer",
                                    "label": "Request content"
                                },
                                {
                                    "name": "followAllRedirects",
                                    "type": "boolean",
                                    "label": "Follow all redirect",
                                    "required": true
                                }
                            ],
                            "advanced": true
                        }
                    },
                    {
                        "id": 23,
                        "module": "http:ActionSendData",
                        "version": 3,
                        "parameters": {
                            "handleErrors": true,
                            "useNewZLibDeCompress": true
                        },
                        "mapper": {
                            "url": "https://api.telegra.ph/createPage",
                            "serializeUrl": false,
                            "method": "post",
                            "headers": [
                                {
                                    "name": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "qs": [],
                            "bodyType": "x_www_form_urlencoded",
                            "parseResponse": true,
                            "authUser": "",
                            "authPass": "",
                            "timeout": "",
                            "shareCookies": false,
                            "ca": "",
                            "rejectUnauthorized": true,
                            "followRedirect": true,
                            "useQuerystring": false,
                            "gzip": true,
                            "useMtls": false,
                            "formFields": [
                                {
                                    "key": "access_token",
                                    "value": "{{22.data.result.access_token}}"
                                },
                                {
                                    "key": "title",
                                    "value": "{{9.result}}"
                                },
                                {
                                    "key": "author_name",
                                    "value": "{{22.data.result.author_name}}"
                                },
                                {
                                    "key": "author_url",
                                    "value": "{{22.data.result.author_url}}"
                                },
                                {
                                    "key": "content",
                                    "value": "{{21.result}}"
                                },
                                {
                                    "key": "return_content",
                                    "value": "true"
                                }
                            ],
                            "followAllRedirects": false
                        },
                        "metadata": {
                            "designer": {
                                "x": 659,
                                "y": -397,
                                "name": "Создание страницы",
                                "messages": [
                                    {
                                        "category": "reference",
                                        "severity": "warning",
                                        "message": "Referenced module 'OpenAI (ChatGPT, Whisper, DALL-E) - Create a Completion (Prompt) (GPT-3, GPT-3.5, GPT-4)' [9] is not accessible."
                                    }
                                ]
                            },
                            "restore": {
                                "expect": {
                                    "method": {
                                        "mode": "chose",
                                        "label": "POST"
                                    },
                                    "headers": {
                                        "mode": "chose",
                                        "items": [
                                            null
                                        ]
                                    },
                                    "qs": {
                                        "mode": "chose"
                                    },
                                    "bodyType": {
                                        "label": "Application/x-www-form-urlencoded"
                                    },
                                    "formFields": {
                                        "mode": "chose",
                                        "items": [
                                            null,
                                            null,
                                            null,
                                            null,
                                            null,
                                            null
                                        ]
                                    }
                                }
                            },
                            "parameters": [
                                {
                                    "name": "handleErrors",
                                    "type": "boolean",
                                    "label": "Evaluate all states as errors (except for 2xx and 3xx )",
                                    "required": true
                                },
                                {
                                    "name": "useNewZLibDeCompress",
                                    "type": "hidden"
                                }
                            ],
                            "expect": [
                                {
                                    "name": "url",
                                    "type": "url",
                                    "label": "URL",
                                    "required": true
                                },
                                {
                                    "name": "serializeUrl",
                                    "type": "boolean",
                                    "label": "Serialize URL",
                                    "required": true
                                },
                                {
                                    "name": "method",
                                    "type": "select",
                                    "label": "Method",
                                    "required": true,
                                    "validate": {
                                        "enum": [
                                            "get",
                                            "head",
                                            "post",
                                            "put",
                                            "patch",
                                            "delete",
                                            "options"
                                        ]
                                    }
                                },
                                {
                                    "name": "headers",
                                    "type": "array",
                                    "label": "Headers",
                                    "spec": [
                                        {
                                            "name": "name",
                                            "label": "Name",
                                            "type": "text",
                                            "required": true
                                        },
                                        {
                                            "name": "value",
                                            "label": "Value",
                                            "type": "text"
                                        }
                                    ]
                                },
                                {
                                    "name": "qs",
                                    "type": "array",
                                    "label": "Query String",
                                    "spec": [
                                        {
                                            "name": "name",
                                            "label": "Name",
                                            "type": "text",
                                            "required": true
                                        },
                                        {
                                            "name": "value",
                                            "label": "Value",
                                            "type": "text"
                                        }
                                    ]
                                },
                                {
                                    "name": "bodyType",
                                    "type": "select",
                                    "label": "Body type",
                                    "validate": {
                                        "enum": [
                                            "raw",
                                            "x_www_form_urlencoded",
                                            "multipart_form_data"
                                        ]
                                    }
                                },
                                {
                                    "name": "parseResponse",
                                    "type": "boolean",
                                    "label": "Parse response",
                                    "required": true
                                },
                                {
                                    "name": "authUser",
                                    "type": "text",
                                    "label": "User name"
                                },
                                {
                                    "name": "authPass",
                                    "type": "password",
                                    "label": "Password"
                                },
                                {
                                    "name": "timeout",
                                    "type": "uinteger",
                                    "label": "Timeout",
                                    "validate": {
                                        "max": 300,
                                        "min": 1
                                    }
                                },
                                {
                                    "name": "shareCookies",
                                    "type": "boolean",
                                    "label": "Share cookies with other HTTP modules",
                                    "required": true
                                },
                                {
                                    "name": "ca",
                                    "type": "cert",
                                    "label": "Self-signed certificate"
                                },
                                {
                                    "name": "rejectUnauthorized",
                                    "type": "boolean",
                                    "label": "Reject connections that are using unverified (self-signed) certificates",
                                    "required": true
                                },
                                {
                                    "name": "followRedirect",
                                    "type": "boolean",
                                    "label": "Follow redirect",
                                    "required": true
                                },
                                {
                                    "name": "useQuerystring",
                                    "type": "boolean",
                                    "label": "Disable serialization of multiple same query string keys as arrays",
                                    "required": true
                                },
                                {
                                    "name": "gzip",
                                    "type": "boolean",
                                    "label": "Request compressed content",
                                    "required": true
                                },
                                {
                                    "name": "useMtls",
                                    "type": "boolean",
                                    "label": "Use Mutual TLS",
                                    "required": true
                                },
                                {
                                    "name": "formFields",
                                    "type": "array",
                                    "label": "Fields",
                                    "spec": [
                                        {
                                            "name": "key",
                                            "label": "Key",
                                            "type": "text",
                                            "required": true
                                        },
                                        {
                                            "name": "value",
                                            "label": "Value",
                                            "type": "text"
                                        }
                                    ]
                                },
                                {
                                    "name": "followAllRedirects",
                                    "type": "boolean",
                                    "label": "Follow all redirect",
                                    "required": true
                                }
                            ],
                            "advanced": true
                        }
                    }
                ]
            ]
        },
        "zone": "eu2.make.com"
    }
}